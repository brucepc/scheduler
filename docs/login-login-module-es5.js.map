{"version":3,"sources":["webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/button-toggle.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/tabs.js","webpack:///src/app/login/credentials/credentials.component.ts","webpack:///src/app/login/credentials/credentials.component.html","webpack:///src/app/login/login-routing.module.ts","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/login/login.module.ts","webpack:///src/app/login/signup/signup.component.ts","webpack:///src/app/login/signup/signup.component.html","webpack:///src/app/login/signup/signup.module.ts"],"names":["_c0","_c1","MatButtonToggleDefaultOptions","MAT_BUTTON_TOGGLE_DEFAULT_OPTIONS","MAT_BUTTON_TOGGLE_GROUP_VALUE_ACCESSOR","provide","useExisting","MatButtonToggleGroup","multi","MatButtonToggleGroupMultiple","_uniqueIdCounter","MatButtonToggleChange","source","value","_changeDetector","defaultOptions","_vertical","_multiple","_disabled","_controlValueAccessorChangeFn","_onTouched","_name","valueChange","change","appearance","_selectionModel","multiple","undefined","select","_buttonToggles","filter","toggle","checked","markForCheck","fn","isDisabled","disabled","selected","Array","isArray","length","event","emit","isUserInput","deferEvents","deselect","Promise","resolve","then","_updateModelValue","isSelected","_rawValue","some","Error","_clearSelection","forEach","currentValue","_selectValue","clear","correspondingOption","find","_emitChangeEvent","name","_markForCheck","map","newValue","_setSelectionByValue","ɵfac","MatButtonToggleGroup_Factory","t","ɵdir","type","selectors","contentQueries","MatButtonToggleGroup_ContentQueries","rf","ctx","dirIndex","MatButtonToggle","_t","hostAttrs","hostVars","hostBindings","MatButtonToggleGroup_HostBindings","vertical","inputs","outputs","exportAs","features","ctorParameters","decorators","args","propDecorators","descendants","selector","providers","host","MatButtonToggleBase","_MatButtonToggleMixinBase","toggleGroup","_changeDetectorRef","_elementRef","_focusMonitor","defaultTabIndex","_isSingleSelector","_checked","ariaLabelledby","parsedTabIndex","Number","tabIndex","buttonToggleGroup","group","_type","id","_isPrechecked","_isSelected","_syncButtonToggle","monitor","stopMonitoring","options","_buttonElement","nativeElement","focus","newChecked","_appearance","MatButtonToggle_Factory","ɵcmp","viewQuery","MatButtonToggle_Query","first","MatButtonToggle_HostBindings","MatButtonToggle_focus_HostBindingHandler","disableRipple","ariaLabel","ngContentSelectors","decls","vars","consts","template","MatButtonToggle_Template","MatButtonToggle_Template_button_click_0_listener","_onButtonClick","_r0","buttonId","directives","styles","encapsulation","changeDetection","String","None","OnPush","MatButtonToggleModule","ɵmod","ɵinj","factory","MatButtonToggleModule_Factory","imports","ngJitMode","declarations","exports","MatTab_ng_template_0_Template","MatTabBody_ng_template_2_Template","a0","animationDuration","_c2","a1","params","_c3","_c4","MatTabGroup_div_2_ng_template_2_ng_template_0_Template","MatTabGroup_div_2_ng_template_2_Template","tab_r4","$implicit","templateLabel","MatTabGroup_div_2_ng_template_3_Template","textLabel","MatTabGroup_div_2_Template","_r12","MatTabGroup_div_2_Template_div_click_0_listener","i_r5","index","ctx_r11","_handleClick","ctx_r1","selectedIndex","_getTabLabelId","_getTabIndex","_tabs","_getTabContentId","MatTabGroup_mat_tab_body_5_Template","_r16","MatTabGroup_mat_tab_body_5_Template_mat_tab_body__onCentered_0_listener","ctx_r15","_removeTabBodyWrapperHeight","MatTabGroup_mat_tab_body_5_Template_mat_tab_body__onCentering_0_listener","$event","ctx_r17","_setTabBodyWrapperHeight","tab_r13","i_r14","ctx_r3","content","position","origin","_c5","_c6","_c7","_c8","_c9","_MatInkBarPositioner","_MAT_INK_BAR_POSITIONER","providedIn","_MAT_INK_BAR_POSITIONER_FACTORY","method","element","left","offsetLeft","width","offsetWidth","MatInkBar","_ngZone","_inkBarPositioner","_animationMode","show","requestAnimationFrame","runOutsideAngular","_setStyles","style","visibility","positions","inkBar","MatInkBar_Factory","MatInkBar_HostBindings","MatTabContent","MatTabContent_Factory","MatTabLabel","MatTabLabel_Factory","ɵMatTabLabel_BaseFactory","MatTabBase","_MatTabMixinBase","MAT_TAB_GROUP","MatTab","_viewContainerRef","_closestTabGroup","_contentPortal","_stateChanges","isActive","changes","hasOwnProperty","next","complete","_explicitContent","_implicitContent","_templateLabel","MatTab_Factory","MatTab_ContentQueries","MatTab_Query","MatTab_Template","read","Default","matTabsAnimations","translateTab","transform","minHeight","MatTabBodyPortal","componentFactoryResolver","viewContainerRef","_host","_document","_centeringSub","EMPTY","_leavingSub","_beforeCentering","pipe","_isCenterPosition","_position","subscribe","isCentering","hasAttached","attach","_content","_afterLeavingCenter","detach","unsubscribe","MatTabBodyPortal_Factory","MatTabBody","_MatTabBodyBase","_dir","changeDetectorRef","_dirChangeSubscription","_translateTabComplete","_onCentering","_onCentered","dir","_computePositionAnimationState","x","y","fromState","toState","_computePositionFromOrigin","clientHeight","_getLayoutDirection","_positionIndex","_MatTabBodyBase_Factory","elementRef","MatTabBody_Factory","MatTabBody_Query","_portalHost","MatTabBody_Template","MatTabBody_Template_div_animation_translateTab_start_0_listener","_onTranslateTabStarted","MatTabBody_Template_div_animation_translateTab_done_0_listener","data","animation","animations","MatTabsConfig","MAT_TABS_CONFIG","nextId","MatTabChangeEvent","MatTabGroupMixinBase","_MatTabGroupMixinBase","MatTabGroupBaseHeader","_MatTabGroupBase","defaultConfig","_indexToSelect","_tabBodyWrapperHeight","_tabsSubscription","_tabLabelSubscription","_dynamicHeight","_selectedIndex","headerPosition","selectedIndexChange","focusChange","animationDone","selectedTabChange","_groupId","disablePagination","indexToSelect","_clampTabIndex","isFirstRun","_createChangeEvent","tab","_subscribeToAllTabChanges","_subscribeToTabLabels","tabs","toArray","i","_allTabs","reset","notifyOnChanges","destroy","_tabHeader","_alignInkBarToSelectedTab","Math","min","max","tabHeight","wrapper","_tabBodyWrapper","height","offsetHeight","tabHeader","focusIndex","idx","_animationDuration","test","_backgroundColor","classList","remove","backgroundColor","add","_MatTabGroupBase_Factory","dynamicHeight","MatTabGroup","animationMode","MatTabGroup_Factory","MatTabGroup_ContentQueries","MatTabGroup_Query","MatTabGroup_HostBindings","color","MatTabGroup_Template","MatTabGroup_Template_mat_tab_header_indexFocused_0_listener","_focusChanged","MatTabGroup_Template_mat_tab_header_selectFocusedIndex_0_listener","MatTabHeader","MatTabLabelWrapper","MatTabLabelWrapperBase","_MatTabLabelWrapperMixinBase","MatTabLabelWrapper_Factory","MatTabLabelWrapper_HostBindings","passiveEventListenerOptions","passive","EXAGGERATED_OVERSCROLL","HEADER_SCROLL_DELAY","HEADER_SCROLL_INTERVAL","MatPaginatedTabHeader","_viewportRuler","_platform","_scrollDistance","_selectedIndexChanged","_destroyed","_showPaginationControls","_disableScrollAfter","_disableScrollBefore","_stopScrolling","selectFocusedIndex","indexFocused","_stopInterval","_previousPaginator","_handlePaginatorPress","_nextPaginator","dirChange","resize","realign","updatePagination","_keyManager","_items","withHorizontalOrientation","withWrap","updateActiveItem","newFocusIndex","_setTabFocus","_tabLabelCount","_scrollToLabel","_checkScrollingControls","_scrollDistanceChanged","_updateTabScrollPosition","keyCode","setFirstItemActive","preventDefault","setLastItemActive","_itemSelected","onKeydown","textContent","_currentTextContent","run","_checkPaginationEnabled","containerEl","_tabListContainer","scrollLeft","scrollWidth","scrollDistance","platform","translateX","_tabList","round","TRIDENT","EDGE","direction","viewLength","scrollAmount","_scrollTo","_scrollHeader","labelIndex","selectedLabel","labelBeforePos","labelAfterPos","beforeVisiblePos","afterVisiblePos","isEnabled","_getMaxScrollDistance","lengthOfTabList","selectedItem","selectedLabelWrapper","_inkBar","alignToElement","hide","mouseEvent","button","maxScrollDistance","distance","activeItemIndex","_isValidIndex","setActiveItem","MatPaginatedTabHeader_Factory","_MatTabHeaderBase","viewportRuler","ngZone","_disableRipple","_MatTabHeaderBase_Factory","MatTabHeader_Factory","MatTabHeader_ContentQueries","MatTabHeader_Query","MatTabHeader_HostBindings","MatTabHeader_Template","MatTabHeader_Template_div_click_0_listener","_handlePaginatorClick","MatTabHeader_Template_div_mousedown_0_listener","MatTabHeader_Template_div_touchend_0_listener","MatTabHeader_Template_div_keydown_3_listener","_handleKeydown","MatTabHeader_Template_div_cdkObserveContent_5_listener","_onContentChanges","MatTabHeader_Template_div_mousedown_10_listener","MatTabHeader_Template_div_click_10_listener","MatTabHeader_Template_div_touchend_10_listener","_MatTabNavBase","updateActiveLink","_element","items","active","_MatTabNavBase_Factory","MatTabNav","MatTabNav_Factory","MatTabNav_ContentQueries","MatTabLink","MatTabNav_Query","MatTabNav_HostBindings","attrs","MatTabNav_Template","MatTabNav_Template_div_click_0_listener","MatTabNav_Template_div_mousedown_0_listener","MatTabNav_Template_div_touchend_0_listener","MatTabNav_Template_div_keydown_3_listener","MatTabNav_Template_div_cdkObserveContent_5_listener","MatTabNav_Template_div_mousedown_10_listener","MatTabNav_Template_div_click_10_listener","MatTabNav_Template_div_touchend_10_listener","MatTabLinkMixinBase","_MatTabLinkMixinBase","_MatTabLinkBase","_tabNavBar","globalRippleOptions","_isActive","rippleConfig","parseInt","enterDuration","exitDuration","_MatTabLinkBase_Factory","tabNavBar","focusMonitor","_tabLinkRipple","setupTriggerEvents","_removeTriggerEvents","MatTabLink_Factory","MatTabLink_HostBindings","MatTabsModule","MatTabsModule_Factory","CredentialsComponent","templateUrl","styleUrls","routes","path","component","children","pathMatch","redirectTo","LoginRoutingModule","forChild","LoginComponent","snackBar","auth","fb","togglePasswordIcon","passwordType","isLoading","buildForm","buttonToggle","loginFormGroup","valid","getRawValue","username","password","login","toPromise","_","redirectAfterLogin","error","open","duration","control","email","required","get","submit","togglePasswordVisibility","LoginModule","SignupComponent","http","customerFormGroup","healthInsurance","pattern","invalid","customer","post","console","log","createUserAccount","SignupModule"],"mappings":"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","file":"login-login-module-es5.js","sourcesContent":["import { FocusMonitor } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { InjectionToken, forwardRef, EventEmitter, Directive, ChangeDetectorRef, Optional, Inject, ContentChildren, Input, Output, Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, Attribute, ViewChild, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { mixinDisableRipple, MatCommonModule, MatRippleModule } from '@angular/material/core';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/button-toggle/button-toggle.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Represents the default options for the button toggle that can be configured\n * using the `MAT_BUTTON_TOGGLE_DEFAULT_OPTIONS` injection token.\n * @record\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/material/core';\n\nconst _c0 = [\"button\"];\nconst _c1 = [\"*\"];\nfunction MatButtonToggleDefaultOptions() { }\nif (false) {\n    /** @type {?|undefined} */\n    MatButtonToggleDefaultOptions.prototype.appearance;\n}\n/**\n * Injection token that can be used to configure the\n * default options for all button toggles within an app.\n * @type {?}\n */\nconst MAT_BUTTON_TOGGLE_DEFAULT_OPTIONS = new InjectionToken('MAT_BUTTON_TOGGLE_DEFAULT_OPTIONS');\n/**\n * Provider Expression that allows mat-button-toggle-group to register as a ControlValueAccessor.\n * This allows it to support [(ngModel)].\n * \\@docs-private\n * @type {?}\n */\nconst MAT_BUTTON_TOGGLE_GROUP_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    () => MatButtonToggleGroup)),\n    multi: true\n};\n/**\n * @deprecated Use `MatButtonToggleGroup` instead.\n * \\@breaking-change 8.0.0\n */\nclass MatButtonToggleGroupMultiple {\n}\n/** @type {?} */\nlet _uniqueIdCounter = 0;\n/**\n * Change event object emitted by MatButtonToggle.\n */\nclass MatButtonToggleChange {\n    /**\n     * @param {?} source\n     * @param {?} value\n     */\n    constructor(source, value) {\n        this.source = source;\n        this.value = value;\n    }\n}\nif (false) {\n    /**\n     * The MatButtonToggle that emits the event.\n     * @type {?}\n     */\n    MatButtonToggleChange.prototype.source;\n    /**\n     * The value assigned to the MatButtonToggle.\n     * @type {?}\n     */\n    MatButtonToggleChange.prototype.value;\n}\n/**\n * Exclusive selection button toggle group that behaves like a radio-button group.\n */\nclass MatButtonToggleGroup {\n    /**\n     * @param {?} _changeDetector\n     * @param {?=} defaultOptions\n     */\n    constructor(_changeDetector, defaultOptions) {\n        this._changeDetector = _changeDetector;\n        this._vertical = false;\n        this._multiple = false;\n        this._disabled = false;\n        /**\n         * The method to be called in order to update ngModel.\n         * Now `ngModel` binding is not supported in multiple selection mode.\n         */\n        this._controlValueAccessorChangeFn = (/**\n         * @return {?}\n         */\n        () => { });\n        /**\n         * onTouch function registered via registerOnTouch (ControlValueAccessor).\n         */\n        this._onTouched = (/**\n         * @return {?}\n         */\n        () => { });\n        this._name = `mat-button-toggle-group-${_uniqueIdCounter++}`;\n        /**\n         * Event that emits whenever the value of the group changes.\n         * Used to facilitate two-way data binding.\n         * \\@docs-private\n         */\n        this.valueChange = new EventEmitter();\n        /**\n         * Event emitted when the group's value changes.\n         */\n        this.change = new EventEmitter();\n        this.appearance =\n            defaultOptions && defaultOptions.appearance ? defaultOptions.appearance : 'standard';\n    }\n    /**\n     * `name` attribute for the underlying `input` element.\n     * @return {?}\n     */\n    get name() { return this._name; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set name(value) {\n        this._name = value;\n        if (this._buttonToggles) {\n            this._buttonToggles.forEach((/**\n             * @param {?} toggle\n             * @return {?}\n             */\n            toggle => {\n                toggle.name = this._name;\n                toggle._markForCheck();\n            }));\n        }\n    }\n    /**\n     * Whether the toggle group is vertical.\n     * @return {?}\n     */\n    get vertical() { return this._vertical; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set vertical(value) {\n        this._vertical = coerceBooleanProperty(value);\n    }\n    /**\n     * Value of the toggle group.\n     * @return {?}\n     */\n    get value() {\n        /** @type {?} */\n        const selected = this._selectionModel ? this._selectionModel.selected : [];\n        if (this.multiple) {\n            return selected.map((/**\n             * @param {?} toggle\n             * @return {?}\n             */\n            toggle => toggle.value));\n        }\n        return selected[0] ? selected[0].value : undefined;\n    }\n    /**\n     * @param {?} newValue\n     * @return {?}\n     */\n    set value(newValue) {\n        this._setSelectionByValue(newValue);\n        this.valueChange.emit(this.value);\n    }\n    /**\n     * Selected button toggles in the group.\n     * @return {?}\n     */\n    get selected() {\n        /** @type {?} */\n        const selected = this._selectionModel ? this._selectionModel.selected : [];\n        return this.multiple ? selected : (selected[0] || null);\n    }\n    /**\n     * Whether multiple button toggles can be selected.\n     * @return {?}\n     */\n    get multiple() { return this._multiple; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set multiple(value) {\n        this._multiple = coerceBooleanProperty(value);\n    }\n    /**\n     * Whether multiple button toggle group is disabled.\n     * @return {?}\n     */\n    get disabled() { return this._disabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        if (this._buttonToggles) {\n            this._buttonToggles.forEach((/**\n             * @param {?} toggle\n             * @return {?}\n             */\n            toggle => toggle._markForCheck()));\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._selectionModel = new SelectionModel(this.multiple, undefined, false);\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._selectionModel.select(...this._buttonToggles.filter((/**\n         * @param {?} toggle\n         * @return {?}\n         */\n        toggle => toggle.checked)));\n    }\n    /**\n     * Sets the model value. Implemented as part of ControlValueAccessor.\n     * @param {?} value Value to be set to the model.\n     * @return {?}\n     */\n    writeValue(value) {\n        this.value = value;\n        this._changeDetector.markForCheck();\n    }\n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnChange(fn) {\n        this._controlValueAccessorChangeFn = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n    }\n    /**\n     * Dispatch change event with current selection and group value.\n     * @return {?}\n     */\n    _emitChangeEvent() {\n        /** @type {?} */\n        const selected = this.selected;\n        /** @type {?} */\n        const source = Array.isArray(selected) ? selected[selected.length - 1] : selected;\n        /** @type {?} */\n        const event = new MatButtonToggleChange((/** @type {?} */ (source)), this.value);\n        this._controlValueAccessorChangeFn(event.value);\n        this.change.emit(event);\n    }\n    /**\n     * Syncs a button toggle's selected state with the model value.\n     * @param {?} toggle Toggle to be synced.\n     * @param {?} select Whether the toggle should be selected.\n     * @param {?=} isUserInput Whether the change was a result of a user interaction.\n     * @param {?=} deferEvents Whether to defer emitting the change events.\n     * @return {?}\n     */\n    _syncButtonToggle(toggle, select, isUserInput = false, deferEvents = false) {\n        // Deselect the currently-selected toggle, if we're in single-selection\n        // mode and the button being toggled isn't selected at the moment.\n        if (!this.multiple && this.selected && !toggle.checked) {\n            ((/** @type {?} */ (this.selected))).checked = false;\n        }\n        if (this._selectionModel) {\n            if (select) {\n                this._selectionModel.select(toggle);\n            }\n            else {\n                this._selectionModel.deselect(toggle);\n            }\n        }\n        else {\n            deferEvents = true;\n        }\n        // We need to defer in some cases in order to avoid \"changed after checked errors\", however\n        // the side-effect is that we may end up updating the model value out of sequence in others\n        // The `deferEvents` flag allows us to decide whether to do it on a case-by-case basis.\n        if (deferEvents) {\n            Promise.resolve().then((/**\n             * @return {?}\n             */\n            () => this._updateModelValue(isUserInput)));\n        }\n        else {\n            this._updateModelValue(isUserInput);\n        }\n    }\n    /**\n     * Checks whether a button toggle is selected.\n     * @param {?} toggle\n     * @return {?}\n     */\n    _isSelected(toggle) {\n        return this._selectionModel && this._selectionModel.isSelected(toggle);\n    }\n    /**\n     * Determines whether a button toggle should be checked on init.\n     * @param {?} toggle\n     * @return {?}\n     */\n    _isPrechecked(toggle) {\n        if (typeof this._rawValue === 'undefined') {\n            return false;\n        }\n        if (this.multiple && Array.isArray(this._rawValue)) {\n            return this._rawValue.some((/**\n             * @param {?} value\n             * @return {?}\n             */\n            value => toggle.value != null && value === toggle.value));\n        }\n        return toggle.value === this._rawValue;\n    }\n    /**\n     * Updates the selection state of the toggles in the group based on a value.\n     * @private\n     * @param {?} value\n     * @return {?}\n     */\n    _setSelectionByValue(value) {\n        this._rawValue = value;\n        if (!this._buttonToggles) {\n            return;\n        }\n        if (this.multiple && value) {\n            if (!Array.isArray(value)) {\n                throw Error('Value must be an array in multiple-selection mode.');\n            }\n            this._clearSelection();\n            value.forEach((/**\n             * @param {?} currentValue\n             * @return {?}\n             */\n            (currentValue) => this._selectValue(currentValue)));\n        }\n        else {\n            this._clearSelection();\n            this._selectValue(value);\n        }\n    }\n    /**\n     * Clears the selected toggles.\n     * @private\n     * @return {?}\n     */\n    _clearSelection() {\n        this._selectionModel.clear();\n        this._buttonToggles.forEach((/**\n         * @param {?} toggle\n         * @return {?}\n         */\n        toggle => toggle.checked = false));\n    }\n    /**\n     * Selects a value if there's a toggle that corresponds to it.\n     * @private\n     * @param {?} value\n     * @return {?}\n     */\n    _selectValue(value) {\n        /** @type {?} */\n        const correspondingOption = this._buttonToggles.find((/**\n         * @param {?} toggle\n         * @return {?}\n         */\n        toggle => {\n            return toggle.value != null && toggle.value === value;\n        }));\n        if (correspondingOption) {\n            correspondingOption.checked = true;\n            this._selectionModel.select(correspondingOption);\n        }\n    }\n    /**\n     * Syncs up the group's value with the model and emits the change event.\n     * @private\n     * @param {?} isUserInput\n     * @return {?}\n     */\n    _updateModelValue(isUserInput) {\n        // Only emit the change event for user input.\n        if (isUserInput) {\n            this._emitChangeEvent();\n        }\n        // Note: we emit this one no matter whether it was a user interaction, because\n        // it is used by Angular to sync up the two-way data binding.\n        this.valueChange.emit(this.value);\n    }\n}\nMatButtonToggleGroup.ɵfac = function MatButtonToggleGroup_Factory(t) { return new (t || MatButtonToggleGroup)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_BUTTON_TOGGLE_DEFAULT_OPTIONS, 8)); };\nMatButtonToggleGroup.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatButtonToggleGroup, selectors: [[\"mat-button-toggle-group\"]], contentQueries: function MatButtonToggleGroup_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatButtonToggle, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._buttonToggles = _t);\n    } }, hostAttrs: [\"role\", \"group\", 1, \"mat-button-toggle-group\"], hostVars: 5, hostBindings: function MatButtonToggleGroup_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-disabled\", ctx.disabled);\n        ɵngcc0.ɵɵclassProp(\"mat-button-toggle-vertical\", ctx.vertical)(\"mat-button-toggle-group-appearance-standard\", ctx.appearance === \"standard\");\n    } }, inputs: { appearance: \"appearance\", name: \"name\", vertical: \"vertical\", value: \"value\", multiple: \"multiple\", disabled: \"disabled\" }, outputs: { valueChange: \"valueChange\", change: \"change\" }, exportAs: [\"matButtonToggleGroup\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            MAT_BUTTON_TOGGLE_GROUP_VALUE_ACCESSOR,\n            { provide: MatButtonToggleGroupMultiple, useExisting: MatButtonToggleGroup },\n        ])] });\n/** @nocollapse */\nMatButtonToggleGroup.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_BUTTON_TOGGLE_DEFAULT_OPTIONS,] }] }\n];\nMatButtonToggleGroup.propDecorators = {\n    _buttonToggles: [{ type: ContentChildren, args: [forwardRef((/**\n                 * @return {?}\n                 */\n                () => MatButtonToggle)), {\n                    // Note that this would technically pick up toggles\n                    // from nested groups, but that's not a case that we support.\n                    descendants: true\n                },] }],\n    appearance: [{ type: Input }],\n    name: [{ type: Input }],\n    vertical: [{ type: Input }],\n    value: [{ type: Input }],\n    valueChange: [{ type: Output }],\n    multiple: [{ type: Input }],\n    disabled: [{ type: Input }],\n    change: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatButtonToggleGroup, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-button-toggle-group',\n                providers: [\n                    MAT_BUTTON_TOGGLE_GROUP_VALUE_ACCESSOR,\n                    { provide: MatButtonToggleGroupMultiple, useExisting: MatButtonToggleGroup },\n                ],\n                host: {\n                    'role': 'group',\n                    'class': 'mat-button-toggle-group',\n                    '[attr.aria-disabled]': 'disabled',\n                    '[class.mat-button-toggle-vertical]': 'vertical',\n                    '[class.mat-button-toggle-group-appearance-standard]': 'appearance === \"standard\"'\n                },\n                exportAs: 'matButtonToggleGroup'\n            }]\n    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_BUTTON_TOGGLE_DEFAULT_OPTIONS]\n            }] }]; }, { valueChange: [{\n            type: Output\n        }], change: [{\n            type: Output\n        }], appearance: [{\n            type: Input\n        }], name: [{\n            type: Input\n        }], vertical: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], multiple: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], _buttonToggles: [{\n            type: ContentChildren,\n            args: [forwardRef(( /**\n                             * @return {?}\n                             */() => MatButtonToggle)), {\n                    // Note that this would technically pick up toggles\n                    // from nested groups, but that's not a case that we support.\n                    descendants: true\n                }]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatButtonToggleGroup.ngAcceptInputType_disabled;\n    /** @type {?} */\n    MatButtonToggleGroup.ngAcceptInputType_multiple;\n    /** @type {?} */\n    MatButtonToggleGroup.ngAcceptInputType_vertical;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatButtonToggleGroup.prototype._vertical;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatButtonToggleGroup.prototype._multiple;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatButtonToggleGroup.prototype._disabled;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatButtonToggleGroup.prototype._selectionModel;\n    /**\n     * Reference to the raw value that the consumer tried to assign. The real\n     * value will exclude any values from this one that don't correspond to a\n     * toggle. Useful for the cases where the value is assigned before the toggles\n     * have been initialized or at the same that they're being swapped out.\n     * @type {?}\n     * @private\n     */\n    MatButtonToggleGroup.prototype._rawValue;\n    /**\n     * The method to be called in order to update ngModel.\n     * Now `ngModel` binding is not supported in multiple selection mode.\n     * @type {?}\n     */\n    MatButtonToggleGroup.prototype._controlValueAccessorChangeFn;\n    /**\n     * onTouch function registered via registerOnTouch (ControlValueAccessor).\n     * @type {?}\n     */\n    MatButtonToggleGroup.prototype._onTouched;\n    /**\n     * Child button toggle buttons.\n     * @type {?}\n     */\n    MatButtonToggleGroup.prototype._buttonToggles;\n    /**\n     * The appearance for all the buttons in the group.\n     * @type {?}\n     */\n    MatButtonToggleGroup.prototype.appearance;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatButtonToggleGroup.prototype._name;\n    /**\n     * Event that emits whenever the value of the group changes.\n     * Used to facilitate two-way data binding.\n     * \\@docs-private\n     * @type {?}\n     */\n    MatButtonToggleGroup.prototype.valueChange;\n    /**\n     * Event emitted when the group's value changes.\n     * @type {?}\n     */\n    MatButtonToggleGroup.prototype.change;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatButtonToggleGroup.prototype._changeDetector;\n}\n// Boilerplate for applying mixins to the MatButtonToggle class.\n/**\n * \\@docs-private\n */\nclass MatButtonToggleBase {\n}\n/** @type {?} */\nconst _MatButtonToggleMixinBase = mixinDisableRipple(MatButtonToggleBase);\n/**\n * Single button inside of a toggle group.\n */\nclass MatButtonToggle extends _MatButtonToggleMixinBase {\n    /**\n     * @param {?} toggleGroup\n     * @param {?} _changeDetectorRef\n     * @param {?} _elementRef\n     * @param {?} _focusMonitor\n     * @param {?} defaultTabIndex\n     * @param {?=} defaultOptions\n     */\n    constructor(toggleGroup, _changeDetectorRef, _elementRef, _focusMonitor, \n    // @breaking-change 8.0.0 `defaultTabIndex` to be made a required parameter.\n    defaultTabIndex, defaultOptions) {\n        super();\n        this._changeDetectorRef = _changeDetectorRef;\n        this._elementRef = _elementRef;\n        this._focusMonitor = _focusMonitor;\n        this._isSingleSelector = false;\n        this._checked = false;\n        /**\n         * Users can specify the `aria-labelledby` attribute which will be forwarded to the input element\n         */\n        this.ariaLabelledby = null;\n        this._disabled = false;\n        /**\n         * Event emitted when the group value changes.\n         */\n        this.change = new EventEmitter();\n        /** @type {?} */\n        const parsedTabIndex = Number(defaultTabIndex);\n        this.tabIndex = (parsedTabIndex || parsedTabIndex === 0) ? parsedTabIndex : null;\n        this.buttonToggleGroup = toggleGroup;\n        this.appearance =\n            defaultOptions && defaultOptions.appearance ? defaultOptions.appearance : 'standard';\n    }\n    /**\n     * Unique ID for the underlying `button` element.\n     * @return {?}\n     */\n    get buttonId() { return `${this.id}-button`; }\n    /**\n     * The appearance style of the button.\n     * @return {?}\n     */\n    get appearance() {\n        return this.buttonToggleGroup ? this.buttonToggleGroup.appearance : this._appearance;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set appearance(value) {\n        this._appearance = value;\n    }\n    /**\n     * Whether the button is checked.\n     * @return {?}\n     */\n    get checked() {\n        return this.buttonToggleGroup ? this.buttonToggleGroup._isSelected(this) : this._checked;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set checked(value) {\n        /** @type {?} */\n        const newValue = coerceBooleanProperty(value);\n        if (newValue !== this._checked) {\n            this._checked = newValue;\n            if (this.buttonToggleGroup) {\n                this.buttonToggleGroup._syncButtonToggle(this, this._checked);\n            }\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * Whether the button is disabled.\n     * @return {?}\n     */\n    get disabled() {\n        return this._disabled || (this.buttonToggleGroup && this.buttonToggleGroup.disabled);\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) { this._disabled = coerceBooleanProperty(value); }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        /** @type {?} */\n        const group = this.buttonToggleGroup;\n        this._isSingleSelector = group && !group.multiple;\n        this._type = this._isSingleSelector ? 'radio' : 'checkbox';\n        this.id = this.id || `mat-button-toggle-${_uniqueIdCounter++}`;\n        if (this._isSingleSelector) {\n            this.name = group.name;\n        }\n        if (group) {\n            if (group._isPrechecked(this)) {\n                this.checked = true;\n            }\n            else if (group._isSelected(this) !== this._checked) {\n                // As as side effect of the circular dependency between the toggle group and the button,\n                // we may end up in a state where the button is supposed to be checked on init, but it\n                // isn't, because the checked value was assigned too early. This can happen when Ivy\n                // assigns the static input value before the `ngOnInit` has run.\n                group._syncButtonToggle(this, this._checked);\n            }\n        }\n        this._focusMonitor.monitor(this._elementRef, true);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        /** @type {?} */\n        const group = this.buttonToggleGroup;\n        this._focusMonitor.stopMonitoring(this._elementRef);\n        // Remove the toggle from the selection once it's destroyed. Needs to happen\n        // on the next tick in order to avoid \"changed after checked\" errors.\n        if (group && group._isSelected(this)) {\n            group._syncButtonToggle(this, false, false, true);\n        }\n    }\n    /**\n     * Focuses the button.\n     * @param {?=} options\n     * @return {?}\n     */\n    focus(options) {\n        this._buttonElement.nativeElement.focus(options);\n    }\n    /**\n     * Checks the button toggle due to an interaction with the underlying native button.\n     * @return {?}\n     */\n    _onButtonClick() {\n        /** @type {?} */\n        const newChecked = this._isSingleSelector ? true : !this._checked;\n        if (newChecked !== this._checked) {\n            this._checked = newChecked;\n            if (this.buttonToggleGroup) {\n                this.buttonToggleGroup._syncButtonToggle(this, this._checked, true);\n                this.buttonToggleGroup._onTouched();\n            }\n        }\n        // Emit a change event when it's the single selector\n        this.change.emit(new MatButtonToggleChange(this, this.value));\n    }\n    /**\n     * Marks the button toggle as needing checking for change detection.\n     * This method is exposed because the parent button toggle group will directly\n     * update bound properties of the radio button.\n     * @return {?}\n     */\n    _markForCheck() {\n        // When the group value changes, the button will not be notified.\n        // Use `markForCheck` to explicit update button toggle's status.\n        this._changeDetectorRef.markForCheck();\n    }\n}\nMatButtonToggle.ɵfac = function MatButtonToggle_Factory(t) { return new (t || MatButtonToggle)(ɵngcc0.ɵɵdirectiveInject(MatButtonToggleGroup, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(MAT_BUTTON_TOGGLE_DEFAULT_OPTIONS, 8)); };\nMatButtonToggle.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatButtonToggle, selectors: [[\"mat-button-toggle\"]], viewQuery: function MatButtonToggle_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._buttonElement = _t.first);\n    } }, hostAttrs: [1, \"mat-button-toggle\"], hostVars: 11, hostBindings: function MatButtonToggle_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"focus\", function MatButtonToggle_focus_HostBindingHandler() { return ctx.focus(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"tabindex\", 0 - 1)(\"id\", ctx.id)(\"name\", null);\n        ɵngcc0.ɵɵclassProp(\"mat-button-toggle-standalone\", !ctx.buttonToggleGroup)(\"mat-button-toggle-checked\", ctx.checked)(\"mat-button-toggle-disabled\", ctx.disabled)(\"mat-button-toggle-appearance-standard\", ctx.appearance === \"standard\");\n    } }, inputs: { disableRipple: \"disableRipple\", ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], tabIndex: \"tabIndex\", appearance: \"appearance\", checked: \"checked\", disabled: \"disabled\", id: \"id\", name: \"name\", ariaLabel: [\"aria-label\", \"ariaLabel\"], value: \"value\" }, outputs: { change: \"change\" }, exportAs: [\"matButtonToggle\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c1, decls: 6, vars: 9, consts: [[\"type\", \"button\", 1, \"mat-button-toggle-button\", \"mat-focus-indicator\", 3, \"id\", \"disabled\", \"click\"], [\"button\", \"\"], [1, \"mat-button-toggle-label-content\"], [1, \"mat-button-toggle-focus-overlay\"], [\"matRipple\", \"\", 1, \"mat-button-toggle-ripple\", 3, \"matRippleTrigger\", \"matRippleDisabled\"]], template: function MatButtonToggle_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"button\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"click\", function MatButtonToggle_Template_button_click_0_listener() { return ctx._onButtonClick(); });\n        ɵngcc0.ɵɵelementStart(2, \"div\", 2);\n        ɵngcc0.ɵɵprojection(3);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(4, \"div\", 3);\n        ɵngcc0.ɵɵelement(5, \"div\", 4);\n    } if (rf & 2) {\n        const _r0 = ɵngcc0.ɵɵreference(1);\n        ɵngcc0.ɵɵproperty(\"id\", ctx.buttonId)(\"disabled\", ctx.disabled || null);\n        ɵngcc0.ɵɵattribute(\"tabindex\", ctx.disabled ? 0 - 1 : ctx.tabIndex)(\"aria-pressed\", ctx.checked)(\"name\", ctx.name || null)(\"aria-label\", ctx.ariaLabel)(\"aria-labelledby\", ctx.ariaLabelledby);\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵproperty(\"matRippleTrigger\", _r0)(\"matRippleDisabled\", ctx.disableRipple || ctx.disabled);\n    } }, directives: [ɵngcc2.MatRipple], styles: [\".mat-button-toggle-standalone,.mat-button-toggle-group{position:relative;display:inline-flex;flex-direction:row;white-space:nowrap;overflow:hidden;border-radius:2px;-webkit-tap-highlight-color:transparent}.cdk-high-contrast-active .mat-button-toggle-standalone,.cdk-high-contrast-active .mat-button-toggle-group{outline:solid 1px}.mat-button-toggle-standalone.mat-button-toggle-appearance-standard,.mat-button-toggle-group-appearance-standard{border-radius:4px}.cdk-high-contrast-active .mat-button-toggle-standalone.mat-button-toggle-appearance-standard,.cdk-high-contrast-active .mat-button-toggle-group-appearance-standard{outline:0}.mat-button-toggle-vertical{flex-direction:column}.mat-button-toggle-vertical .mat-button-toggle-label-content{display:block}.mat-button-toggle{white-space:nowrap;position:relative}.mat-button-toggle .mat-icon svg{vertical-align:top}.mat-button-toggle.cdk-keyboard-focused .mat-button-toggle-focus-overlay{opacity:1}.cdk-high-contrast-active .mat-button-toggle.cdk-keyboard-focused .mat-button-toggle-focus-overlay{opacity:.5}.mat-button-toggle-appearance-standard:not(.mat-button-toggle-disabled):hover .mat-button-toggle-focus-overlay{opacity:.04}.mat-button-toggle-appearance-standard.cdk-keyboard-focused:not(.mat-button-toggle-disabled) .mat-button-toggle-focus-overlay{opacity:.12}.cdk-high-contrast-active .mat-button-toggle-appearance-standard.cdk-keyboard-focused:not(.mat-button-toggle-disabled) .mat-button-toggle-focus-overlay{opacity:.5}@media(hover: none){.mat-button-toggle-appearance-standard:not(.mat-button-toggle-disabled):hover .mat-button-toggle-focus-overlay{display:none}}.mat-button-toggle-label-content{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;display:inline-block;line-height:36px;padding:0 16px;position:relative}.mat-button-toggle-appearance-standard .mat-button-toggle-label-content{line-height:48px;padding:0 12px}.mat-button-toggle-label-content>*{vertical-align:middle}.mat-button-toggle-focus-overlay{border-radius:inherit;pointer-events:none;opacity:0;top:0;left:0;right:0;bottom:0;position:absolute}.mat-button-toggle-checked .mat-button-toggle-focus-overlay{border-bottom:solid 36px}.cdk-high-contrast-active .mat-button-toggle-checked .mat-button-toggle-focus-overlay{opacity:.5;height:0}.cdk-high-contrast-active .mat-button-toggle-checked.mat-button-toggle-appearance-standard .mat-button-toggle-focus-overlay{border-bottom:solid 48px}.mat-button-toggle .mat-button-toggle-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-button-toggle-button{border:0;background:none;color:inherit;padding:0;margin:0;font:inherit;outline:none;width:100%;cursor:pointer}.mat-button-toggle-disabled .mat-button-toggle-button{cursor:default}.mat-button-toggle-button::-moz-focus-inner{border:0}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatButtonToggle.ctorParameters = () => [\n    { type: MatButtonToggleGroup, decorators: [{ type: Optional }] },\n    { type: ChangeDetectorRef },\n    { type: ElementRef },\n    { type: FocusMonitor },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_BUTTON_TOGGLE_DEFAULT_OPTIONS,] }] }\n];\nMatButtonToggle.propDecorators = {\n    ariaLabel: [{ type: Input, args: ['aria-label',] }],\n    ariaLabelledby: [{ type: Input, args: ['aria-labelledby',] }],\n    _buttonElement: [{ type: ViewChild, args: ['button',] }],\n    id: [{ type: Input }],\n    name: [{ type: Input }],\n    value: [{ type: Input }],\n    tabIndex: [{ type: Input }],\n    appearance: [{ type: Input }],\n    checked: [{ type: Input }],\n    disabled: [{ type: Input }],\n    change: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatButtonToggle, [{\n        type: Component,\n        args: [{\n                selector: 'mat-button-toggle',\n                template: \"<button #button class=\\\"mat-button-toggle-button mat-focus-indicator\\\"\\n        type=\\\"button\\\"\\n        [id]=\\\"buttonId\\\"\\n        [attr.tabindex]=\\\"disabled ? -1 : tabIndex\\\"\\n        [attr.aria-pressed]=\\\"checked\\\"\\n        [disabled]=\\\"disabled || null\\\"\\n        [attr.name]=\\\"name || null\\\"\\n        [attr.aria-label]=\\\"ariaLabel\\\"\\n        [attr.aria-labelledby]=\\\"ariaLabelledby\\\"\\n        (click)=\\\"_onButtonClick()\\\">\\n  <div class=\\\"mat-button-toggle-label-content\\\">\\n    <ng-content></ng-content>\\n  </div>\\n</button>\\n\\n<div class=\\\"mat-button-toggle-focus-overlay\\\"></div>\\n<div class=\\\"mat-button-toggle-ripple\\\" matRipple\\n     [matRippleTrigger]=\\\"button\\\"\\n     [matRippleDisabled]=\\\"this.disableRipple || this.disabled\\\">\\n</div>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                exportAs: 'matButtonToggle',\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                inputs: ['disableRipple'],\n                host: {\n                    '[class.mat-button-toggle-standalone]': '!buttonToggleGroup',\n                    '[class.mat-button-toggle-checked]': 'checked',\n                    '[class.mat-button-toggle-disabled]': 'disabled',\n                    '[class.mat-button-toggle-appearance-standard]': 'appearance === \"standard\"',\n                    'class': 'mat-button-toggle',\n                    // Always reset the tabindex to -1 so it doesn't conflict with the one on the `button`,\n                    // but can still receive focus from things like cdkFocusInitial.\n                    '[attr.tabindex]': '-1',\n                    '[attr.id]': 'id',\n                    '[attr.name]': 'null',\n                    '(focus)': 'focus()'\n                },\n                styles: [\".mat-button-toggle-standalone,.mat-button-toggle-group{position:relative;display:inline-flex;flex-direction:row;white-space:nowrap;overflow:hidden;border-radius:2px;-webkit-tap-highlight-color:transparent}.cdk-high-contrast-active .mat-button-toggle-standalone,.cdk-high-contrast-active .mat-button-toggle-group{outline:solid 1px}.mat-button-toggle-standalone.mat-button-toggle-appearance-standard,.mat-button-toggle-group-appearance-standard{border-radius:4px}.cdk-high-contrast-active .mat-button-toggle-standalone.mat-button-toggle-appearance-standard,.cdk-high-contrast-active .mat-button-toggle-group-appearance-standard{outline:0}.mat-button-toggle-vertical{flex-direction:column}.mat-button-toggle-vertical .mat-button-toggle-label-content{display:block}.mat-button-toggle{white-space:nowrap;position:relative}.mat-button-toggle .mat-icon svg{vertical-align:top}.mat-button-toggle.cdk-keyboard-focused .mat-button-toggle-focus-overlay{opacity:1}.cdk-high-contrast-active .mat-button-toggle.cdk-keyboard-focused .mat-button-toggle-focus-overlay{opacity:.5}.mat-button-toggle-appearance-standard:not(.mat-button-toggle-disabled):hover .mat-button-toggle-focus-overlay{opacity:.04}.mat-button-toggle-appearance-standard.cdk-keyboard-focused:not(.mat-button-toggle-disabled) .mat-button-toggle-focus-overlay{opacity:.12}.cdk-high-contrast-active .mat-button-toggle-appearance-standard.cdk-keyboard-focused:not(.mat-button-toggle-disabled) .mat-button-toggle-focus-overlay{opacity:.5}@media(hover: none){.mat-button-toggle-appearance-standard:not(.mat-button-toggle-disabled):hover .mat-button-toggle-focus-overlay{display:none}}.mat-button-toggle-label-content{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;display:inline-block;line-height:36px;padding:0 16px;position:relative}.mat-button-toggle-appearance-standard .mat-button-toggle-label-content{line-height:48px;padding:0 12px}.mat-button-toggle-label-content>*{vertical-align:middle}.mat-button-toggle-focus-overlay{border-radius:inherit;pointer-events:none;opacity:0;top:0;left:0;right:0;bottom:0;position:absolute}.mat-button-toggle-checked .mat-button-toggle-focus-overlay{border-bottom:solid 36px}.cdk-high-contrast-active .mat-button-toggle-checked .mat-button-toggle-focus-overlay{opacity:.5;height:0}.cdk-high-contrast-active .mat-button-toggle-checked.mat-button-toggle-appearance-standard .mat-button-toggle-focus-overlay{border-bottom:solid 48px}.mat-button-toggle .mat-button-toggle-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-button-toggle-button{border:0;background:none;color:inherit;padding:0;margin:0;font:inherit;outline:none;width:100%;cursor:pointer}.mat-button-toggle-disabled .mat-button-toggle-button{cursor:default}.mat-button-toggle-button::-moz-focus-inner{border:0}\\n\"]\n            }]\n    }], function () { return [{ type: MatButtonToggleGroup, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc1.FocusMonitor }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_BUTTON_TOGGLE_DEFAULT_OPTIONS]\n            }] }]; }, { ariaLabelledby: [{\n            type: Input,\n            args: ['aria-labelledby']\n        }], change: [{\n            type: Output\n        }], tabIndex: [{\n            type: Input\n        }], appearance: [{\n            type: Input\n        }], checked: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], id: [{\n            type: Input\n        }], name: [{\n            type: Input\n        }], ariaLabel: [{\n            type: Input,\n            args: ['aria-label']\n        }], _buttonElement: [{\n            type: ViewChild,\n            args: ['button']\n        }], value: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatButtonToggle.ngAcceptInputType_checked;\n    /** @type {?} */\n    MatButtonToggle.ngAcceptInputType_disabled;\n    /** @type {?} */\n    MatButtonToggle.ngAcceptInputType_vertical;\n    /** @type {?} */\n    MatButtonToggle.ngAcceptInputType_multiple;\n    /** @type {?} */\n    MatButtonToggle.ngAcceptInputType_disableRipple;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatButtonToggle.prototype._isSingleSelector;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatButtonToggle.prototype._checked;\n    /**\n     * Attached to the aria-label attribute of the host element. In most cases, aria-labelledby will\n     * take precedence so this may be omitted.\n     * @type {?}\n     */\n    MatButtonToggle.prototype.ariaLabel;\n    /**\n     * Users can specify the `aria-labelledby` attribute which will be forwarded to the input element\n     * @type {?}\n     */\n    MatButtonToggle.prototype.ariaLabelledby;\n    /**\n     * Type of the button toggle. Either 'radio' or 'checkbox'.\n     * @type {?}\n     */\n    MatButtonToggle.prototype._type;\n    /** @type {?} */\n    MatButtonToggle.prototype._buttonElement;\n    /**\n     * The parent button toggle group (exclusive selection). Optional.\n     * @type {?}\n     */\n    MatButtonToggle.prototype.buttonToggleGroup;\n    /**\n     * The unique ID for this button toggle.\n     * @type {?}\n     */\n    MatButtonToggle.prototype.id;\n    /**\n     * HTML's 'name' attribute used to group radios for unique selection.\n     * @type {?}\n     */\n    MatButtonToggle.prototype.name;\n    /**\n     * MatButtonToggleGroup reads this to assign its own value.\n     * @type {?}\n     */\n    MatButtonToggle.prototype.value;\n    /**\n     * Tabindex for the toggle.\n     * @type {?}\n     */\n    MatButtonToggle.prototype.tabIndex;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatButtonToggle.prototype._appearance;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatButtonToggle.prototype._disabled;\n    /**\n     * Event emitted when the group value changes.\n     * @type {?}\n     */\n    MatButtonToggle.prototype.change;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatButtonToggle.prototype._changeDetectorRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatButtonToggle.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatButtonToggle.prototype._focusMonitor;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/button-toggle/button-toggle-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatButtonToggleModule {\n}\nMatButtonToggleModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatButtonToggleModule });\nMatButtonToggleModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatButtonToggleModule_Factory(t) { return new (t || MatButtonToggleModule)(); }, imports: [[MatCommonModule, MatRippleModule],\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatButtonToggleModule, { declarations: function () { return [MatButtonToggleGroup,\n        MatButtonToggle]; }, imports: function () { return [MatCommonModule, MatRippleModule]; }, exports: function () { return [MatCommonModule,\n        MatButtonToggleGroup,\n        MatButtonToggle]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatButtonToggleModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatCommonModule, MatRippleModule],\n                exports: [MatCommonModule, MatButtonToggleGroup, MatButtonToggle],\n                declarations: [MatButtonToggleGroup, MatButtonToggle]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/button-toggle/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_BUTTON_TOGGLE_DEFAULT_OPTIONS, MAT_BUTTON_TOGGLE_GROUP_VALUE_ACCESSOR, MatButtonToggle, MatButtonToggleChange, MatButtonToggleGroup, MatButtonToggleGroupMultiple, MatButtonToggleModule };\n\n//# sourceMappingURL=button-toggle.js.map","import { FocusKeyManager, FocusMonitor, A11yModule } from '@angular/cdk/a11y';\nimport { ObserversModule } from '@angular/cdk/observers';\nimport { CdkPortal, TemplatePortal, CdkPortalOutlet, PortalHostDirective, PortalModule } from '@angular/cdk/portal';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { InjectionToken, Directive, ElementRef, NgZone, Inject, Optional, TemplateRef, Component, ChangeDetectionStrategy, ViewEncapsulation, ViewContainerRef, ContentChild, ViewChild, Input, ComponentFactoryResolver, forwardRef, EventEmitter, ChangeDetectorRef, Output, QueryList, ContentChildren, Attribute, NgModule } from '@angular/core';\nimport { mixinDisabled, mixinColor, mixinDisableRipple, mixinTabIndex, MAT_RIPPLE_GLOBAL_OPTIONS, RippleRenderer, MatCommonModule, MatRippleModule } from '@angular/material/core';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { Subject, Subscription, merge, fromEvent, of, timer } from 'rxjs';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { startWith, distinctUntilChanged, takeUntil } from 'rxjs/operators';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { ViewportRuler } from '@angular/cdk/scrolling';\nimport { normalizePassiveListenerOptions, Platform } from '@angular/cdk/platform';\nimport { hasModifierKey, SPACE, ENTER, END, HOME } from '@angular/cdk/keycodes';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tabs/ink-bar.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Interface for a a MatInkBar positioner method, defining the positioning and width of the ink\n * bar in a set of tabs.\n * @record\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/bidi';\nimport * as ɵngcc2 from '@angular/common';\nimport * as ɵngcc3 from '@angular/material/core';\nimport * as ɵngcc4 from '@angular/cdk/a11y';\nimport * as ɵngcc5 from '@angular/cdk/portal';\nimport * as ɵngcc6 from '@angular/cdk/scrolling';\nimport * as ɵngcc7 from '@angular/cdk/platform';\nimport * as ɵngcc8 from '@angular/cdk/observers';\n\nfunction MatTab_ng_template_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵprojection(0);\n} }\nconst _c0 = [\"*\"];\nfunction MatTabBody_ng_template_2_Template(rf, ctx) { }\nconst _c1 = function (a0) { return { animationDuration: a0 }; };\nconst _c2 = function (a0, a1) { return { value: a0, params: a1 }; };\nconst _c3 = [\"tabBodyWrapper\"];\nconst _c4 = [\"tabHeader\"];\nfunction MatTabGroup_div_2_ng_template_2_ng_template_0_Template(rf, ctx) { }\nfunction MatTabGroup_div_2_ng_template_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, MatTabGroup_div_2_ng_template_2_ng_template_0_Template, 0, 0, \"ng-template\", 9);\n} if (rf & 2) {\n    const tab_r4 = ɵngcc0.ɵɵnextContext().$implicit;\n    ɵngcc0.ɵɵproperty(\"cdkPortalOutlet\", tab_r4.templateLabel);\n} }\nfunction MatTabGroup_div_2_ng_template_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵtext(0);\n} if (rf & 2) {\n    const tab_r4 = ɵngcc0.ɵɵnextContext().$implicit;\n    ɵngcc0.ɵɵtextInterpolate(tab_r4.textLabel);\n} }\nfunction MatTabGroup_div_2_Template(rf, ctx) { if (rf & 1) {\n    const _r12 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 6);\n    ɵngcc0.ɵɵlistener(\"click\", function MatTabGroup_div_2_Template_div_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r12); const tab_r4 = ctx.$implicit; const i_r5 = ctx.index; const ctx_r11 = ɵngcc0.ɵɵnextContext(); const _r0 = ɵngcc0.ɵɵreference(1); return ctx_r11._handleClick(tab_r4, _r0, i_r5); });\n    ɵngcc0.ɵɵelementStart(1, \"div\", 7);\n    ɵngcc0.ɵɵtemplate(2, MatTabGroup_div_2_ng_template_2_Template, 1, 1, \"ng-template\", 8);\n    ɵngcc0.ɵɵtemplate(3, MatTabGroup_div_2_ng_template_3_Template, 1, 1, \"ng-template\", 8);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const tab_r4 = ctx.$implicit;\n    const i_r5 = ctx.index;\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"mat-tab-label-active\", ctx_r1.selectedIndex == i_r5);\n    ɵngcc0.ɵɵproperty(\"id\", ctx_r1._getTabLabelId(i_r5))(\"disabled\", tab_r4.disabled)(\"matRippleDisabled\", tab_r4.disabled || ctx_r1.disableRipple);\n    ɵngcc0.ɵɵattribute(\"tabIndex\", ctx_r1._getTabIndex(tab_r4, i_r5))(\"aria-posinset\", i_r5 + 1)(\"aria-setsize\", ctx_r1._tabs.length)(\"aria-controls\", ctx_r1._getTabContentId(i_r5))(\"aria-selected\", ctx_r1.selectedIndex == i_r5)(\"aria-label\", tab_r4.ariaLabel || null)(\"aria-labelledby\", !tab_r4.ariaLabel && tab_r4.ariaLabelledby ? tab_r4.ariaLabelledby : null);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngIf\", tab_r4.templateLabel);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !tab_r4.templateLabel);\n} }\nfunction MatTabGroup_mat_tab_body_5_Template(rf, ctx) { if (rf & 1) {\n    const _r16 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"mat-tab-body\", 10);\n    ɵngcc0.ɵɵlistener(\"_onCentered\", function MatTabGroup_mat_tab_body_5_Template_mat_tab_body__onCentered_0_listener() { ɵngcc0.ɵɵrestoreView(_r16); const ctx_r15 = ɵngcc0.ɵɵnextContext(); return ctx_r15._removeTabBodyWrapperHeight(); })(\"_onCentering\", function MatTabGroup_mat_tab_body_5_Template_mat_tab_body__onCentering_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r16); const ctx_r17 = ɵngcc0.ɵɵnextContext(); return ctx_r17._setTabBodyWrapperHeight($event); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const tab_r13 = ctx.$implicit;\n    const i_r14 = ctx.index;\n    const ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"mat-tab-body-active\", ctx_r3.selectedIndex == i_r14);\n    ɵngcc0.ɵɵproperty(\"id\", ctx_r3._getTabContentId(i_r14))(\"content\", tab_r13.content)(\"position\", tab_r13.position)(\"origin\", tab_r13.origin)(\"animationDuration\", ctx_r3.animationDuration);\n    ɵngcc0.ɵɵattribute(\"aria-labelledby\", ctx_r3._getTabLabelId(i_r14));\n} }\nconst _c5 = [\"tabListContainer\"];\nconst _c6 = [\"tabList\"];\nconst _c7 = [\"nextPaginator\"];\nconst _c8 = [\"previousPaginator\"];\nconst _c9 = [\"mat-tab-nav-bar\", \"\"];\nfunction _MatInkBarPositioner() { }\n/**\n * Injection token for the MatInkBar's Positioner.\n * @type {?}\n */\nconst _MAT_INK_BAR_POSITIONER = new InjectionToken('MatInkBarPositioner', {\n    providedIn: 'root',\n    factory: _MAT_INK_BAR_POSITIONER_FACTORY\n});\n/**\n * The default positioner function for the MatInkBar.\n * \\@docs-private\n * @return {?}\n */\nfunction _MAT_INK_BAR_POSITIONER_FACTORY() {\n    /** @type {?} */\n    const method = (/**\n     * @param {?} element\n     * @return {?}\n     */\n    (element) => ({\n        left: element ? (element.offsetLeft || 0) + 'px' : '0',\n        width: element ? (element.offsetWidth || 0) + 'px' : '0',\n    }));\n    return method;\n}\n/**\n * The ink-bar is used to display and animate the line underneath the current active tab label.\n * \\@docs-private\n */\nclass MatInkBar {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _ngZone\n     * @param {?} _inkBarPositioner\n     * @param {?=} _animationMode\n     */\n    constructor(_elementRef, _ngZone, _inkBarPositioner, _animationMode) {\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n        this._inkBarPositioner = _inkBarPositioner;\n        this._animationMode = _animationMode;\n    }\n    /**\n     * Calculates the styles from the provided element in order to align the ink-bar to that element.\n     * Shows the ink bar if previously set as hidden.\n     * @param {?} element\n     * @return {?}\n     */\n    alignToElement(element) {\n        this.show();\n        if (typeof requestAnimationFrame !== 'undefined') {\n            this._ngZone.runOutsideAngular((/**\n             * @return {?}\n             */\n            () => {\n                requestAnimationFrame((/**\n                 * @return {?}\n                 */\n                () => this._setStyles(element)));\n            }));\n        }\n        else {\n            this._setStyles(element);\n        }\n    }\n    /**\n     * Shows the ink bar.\n     * @return {?}\n     */\n    show() {\n        this._elementRef.nativeElement.style.visibility = 'visible';\n    }\n    /**\n     * Hides the ink bar.\n     * @return {?}\n     */\n    hide() {\n        this._elementRef.nativeElement.style.visibility = 'hidden';\n    }\n    /**\n     * Sets the proper styles to the ink bar element.\n     * @private\n     * @param {?} element\n     * @return {?}\n     */\n    _setStyles(element) {\n        /** @type {?} */\n        const positions = this._inkBarPositioner(element);\n        /** @type {?} */\n        const inkBar = this._elementRef.nativeElement;\n        inkBar.style.left = positions.left;\n        inkBar.style.width = positions.width;\n    }\n}\nMatInkBar.ɵfac = function MatInkBar_Factory(t) { return new (t || MatInkBar)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(_MAT_INK_BAR_POSITIONER), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatInkBar.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatInkBar, selectors: [[\"mat-ink-bar\"]], hostAttrs: [1, \"mat-ink-bar\"], hostVars: 2, hostBindings: function MatInkBar_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n    } } });\n/** @nocollapse */\nMatInkBar.ctorParameters = () => [\n    { type: ElementRef },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Inject, args: [_MAT_INK_BAR_POSITIONER,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatInkBar, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-ink-bar',\n                host: {\n                    'class': 'mat-ink-bar',\n                    '[class._mat-animation-noopable]': `_animationMode === 'NoopAnimations'`\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [_MAT_INK_BAR_POSITIONER]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    MatInkBar.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatInkBar.prototype._ngZone;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatInkBar.prototype._inkBarPositioner;\n    /** @type {?} */\n    MatInkBar.prototype._animationMode;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tabs/tab-content.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Decorates the `ng-template` tags and reads out the template from it.\n */\nclass MatTabContent {\n    /**\n     * @param {?} template\n     */\n    constructor(template) {\n        this.template = template;\n    }\n}\nMatTabContent.ɵfac = function MatTabContent_Factory(t) { return new (t || MatTabContent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nMatTabContent.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatTabContent, selectors: [[\"\", \"matTabContent\", \"\"]] });\n/** @nocollapse */\nMatTabContent.ctorParameters = () => [\n    { type: TemplateRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTabContent, [{\n        type: Directive,\n        args: [{ selector: '[matTabContent]' }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();\nif (false) {\n    /** @type {?} */\n    MatTabContent.prototype.template;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tabs/tab-label.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Used to flag tab labels for use with the portal directive\n */\nclass MatTabLabel extends CdkPortal {\n}\nMatTabLabel.ɵfac = function MatTabLabel_Factory(t) { return ɵMatTabLabel_BaseFactory(t || MatTabLabel); };\nMatTabLabel.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatTabLabel, selectors: [[\"\", \"mat-tab-label\", \"\"], [\"\", \"matTabLabel\", \"\"]], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatTabLabel_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatTabLabel);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTabLabel, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-tab-label], [matTabLabel]'\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tabs/tab.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Boilerplate for applying mixins to MatTab.\n/**\n * \\@docs-private\n */\nclass MatTabBase {\n}\n/** @type {?} */\nconst _MatTabMixinBase = mixinDisabled(MatTabBase);\n/**\n * Used to provide a tab group to a tab without causing a circular dependency.\n * \\@docs-private\n * @type {?}\n */\nconst MAT_TAB_GROUP = new InjectionToken('MAT_TAB_GROUP');\nclass MatTab extends _MatTabMixinBase {\n    /**\n     * @param {?} _viewContainerRef\n     * @param {?=} _closestTabGroup\n     */\n    constructor(_viewContainerRef, _closestTabGroup) {\n        super();\n        this._viewContainerRef = _viewContainerRef;\n        this._closestTabGroup = _closestTabGroup;\n        /**\n         * Plain text label for the tab, used when there is no template label.\n         */\n        this.textLabel = '';\n        /**\n         * Portal that will be the hosted content of the tab\n         */\n        this._contentPortal = null;\n        /**\n         * Emits whenever the internal state of the tab changes.\n         */\n        this._stateChanges = new Subject();\n        /**\n         * The relatively indexed position where 0 represents the center, negative is left, and positive\n         * represents the right.\n         */\n        this.position = null;\n        /**\n         * The initial relatively index origin of the tab if it was created and selected after there\n         * was already a selected tab. Provides context of what position the tab should originate from.\n         */\n        this.origin = null;\n        /**\n         * Whether the tab is currently active.\n         */\n        this.isActive = false;\n    }\n    /**\n     * Content for the tab label given by `<ng-template mat-tab-label>`.\n     * @return {?}\n     */\n    get templateLabel() { return this._templateLabel; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set templateLabel(value) {\n        // Only update the templateLabel via query if there is actually\n        // a MatTabLabel found. This works around an issue where a user may have\n        // manually set `templateLabel` during creation mode, which would then get clobbered\n        // by `undefined` when this query resolves.\n        if (value) {\n            this._templateLabel = value;\n        }\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    get content() {\n        return this._contentPortal;\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        if (changes.hasOwnProperty('textLabel') || changes.hasOwnProperty('disabled')) {\n            this._stateChanges.next();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._contentPortal = new TemplatePortal(this._explicitContent || this._implicitContent, this._viewContainerRef);\n    }\n}\nMatTab.ɵfac = function MatTab_Factory(t) { return new (t || MatTab)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(MAT_TAB_GROUP, 8)); };\nMatTab.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatTab, selectors: [[\"mat-tab\"]], contentQueries: function MatTab_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatTabLabel, true);\n        ɵngcc0.ɵɵstaticContentQuery(dirIndex, MatTabContent, true, TemplateRef);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.templateLabel = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._explicitContent = _t.first);\n    } }, viewQuery: function MatTab_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵstaticViewQuery(TemplateRef, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._implicitContent = _t.first);\n    } }, inputs: { disabled: \"disabled\", textLabel: [\"label\", \"textLabel\"], ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"] }, exportAs: [\"matTab\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function MatTab_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵtemplate(0, MatTab_ng_template_0_Template, 1, 0, \"ng-template\");\n    } }, encapsulation: 2 });\n/** @nocollapse */\nMatTab.ctorParameters = () => [\n    { type: ViewContainerRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_TAB_GROUP,] }] }\n];\nMatTab.propDecorators = {\n    templateLabel: [{ type: ContentChild, args: [MatTabLabel,] }],\n    _explicitContent: [{ type: ContentChild, args: [MatTabContent, { read: TemplateRef, static: true },] }],\n    _implicitContent: [{ type: ViewChild, args: [TemplateRef, { static: true },] }],\n    textLabel: [{ type: Input, args: ['label',] }],\n    ariaLabel: [{ type: Input, args: ['aria-label',] }],\n    ariaLabelledby: [{ type: Input, args: ['aria-labelledby',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTab, [{\n        type: Component,\n        args: [{\n                selector: 'mat-tab',\n                template: \"<!-- Create a template for the content of the <mat-tab> so that we can grab a reference to this\\n    TemplateRef and use it in a Portal to render the tab content in the appropriate place in the\\n    tab-group. -->\\n<ng-template><ng-content></ng-content></ng-template>\\n\",\n                inputs: ['disabled'],\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                encapsulation: ViewEncapsulation.None,\n                exportAs: 'matTab'\n            }]\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_TAB_GROUP]\n            }] }]; }, { textLabel: [{\n            type: Input,\n            args: ['label']\n        }], templateLabel: [{\n            type: ContentChild,\n            args: [MatTabLabel]\n        }], _explicitContent: [{\n            type: ContentChild,\n            args: [MatTabContent, { read: TemplateRef, static: true }]\n        }], _implicitContent: [{\n            type: ViewChild,\n            args: [TemplateRef, { static: true }]\n        }], ariaLabel: [{\n            type: Input,\n            args: ['aria-label']\n        }], ariaLabelledby: [{\n            type: Input,\n            args: ['aria-labelledby']\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatTab.ngAcceptInputType_disabled;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatTab.prototype._templateLabel;\n    /**\n     * Template provided in the tab content that will be used if present, used to enable lazy-loading\n     * @type {?}\n     */\n    MatTab.prototype._explicitContent;\n    /**\n     * Template inside the MatTab view that contains an `<ng-content>`.\n     * @type {?}\n     */\n    MatTab.prototype._implicitContent;\n    /**\n     * Plain text label for the tab, used when there is no template label.\n     * @type {?}\n     */\n    MatTab.prototype.textLabel;\n    /**\n     * Aria label for the tab.\n     * @type {?}\n     */\n    MatTab.prototype.ariaLabel;\n    /**\n     * Reference to the element that the tab is labelled by.\n     * Will be cleared if `aria-label` is set at the same time.\n     * @type {?}\n     */\n    MatTab.prototype.ariaLabelledby;\n    /**\n     * Portal that will be the hosted content of the tab\n     * @type {?}\n     * @private\n     */\n    MatTab.prototype._contentPortal;\n    /**\n     * Emits whenever the internal state of the tab changes.\n     * @type {?}\n     */\n    MatTab.prototype._stateChanges;\n    /**\n     * The relatively indexed position where 0 represents the center, negative is left, and positive\n     * represents the right.\n     * @type {?}\n     */\n    MatTab.prototype.position;\n    /**\n     * The initial relatively index origin of the tab if it was created and selected after there\n     * was already a selected tab. Provides context of what position the tab should originate from.\n     * @type {?}\n     */\n    MatTab.prototype.origin;\n    /**\n     * Whether the tab is currently active.\n     * @type {?}\n     */\n    MatTab.prototype.isActive;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatTab.prototype._viewContainerRef;\n    /**\n     * @deprecated `_closestTabGroup` parameter to become required.\n     * \\@breaking-change 10.0.0\n     * @type {?}\n     */\n    MatTab.prototype._closestTabGroup;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tabs/tabs-animations.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Animations used by the Material tabs.\n * \\@docs-private\n * @type {?}\n */\nconst matTabsAnimations = {\n    /**\n     * Animation translates a tab along the X axis.\n     */\n    translateTab: trigger('translateTab', [\n        // Note: transitions to `none` instead of 0, because some browsers might blur the content.\n        state('center, void, left-origin-center, right-origin-center', style({ transform: 'none' })),\n        // If the tab is either on the left or right, we additionally add a `min-height` of 1px\n        // in order to ensure that the element has a height before its state changes. This is\n        // necessary because Chrome does seem to skip the transition in RTL mode if the element does\n        // not have a static height and is not rendered. See related issue: #9465\n        state('left', style({ transform: 'translate3d(-100%, 0, 0)', minHeight: '1px' })),\n        state('right', style({ transform: 'translate3d(100%, 0, 0)', minHeight: '1px' })),\n        transition('* => left, * => right, left => center, right => center', animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')),\n        transition('void => left-origin-center', [\n            style({ transform: 'translate3d(-100%, 0, 0)' }),\n            animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')\n        ]),\n        transition('void => right-origin-center', [\n            style({ transform: 'translate3d(100%, 0, 0)' }),\n            animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')\n        ])\n    ])\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tabs/tab-body.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * The portal host directive for the contents of the tab.\n * \\@docs-private\n */\nclass MatTabBodyPortal extends CdkPortalOutlet {\n    /**\n     * @param {?} componentFactoryResolver\n     * @param {?} viewContainerRef\n     * @param {?} _host\n     * @param {?=} _document\n     */\n    constructor(componentFactoryResolver, viewContainerRef, _host, \n    /**\n     * @deprecated `_document` parameter to be made required.\n     * @breaking-change 9.0.0\n     */\n    _document) {\n        super(componentFactoryResolver, viewContainerRef, _document);\n        this._host = _host;\n        /**\n         * Subscription to events for when the tab body begins centering.\n         */\n        this._centeringSub = Subscription.EMPTY;\n        /**\n         * Subscription to events for when the tab body finishes leaving from center position.\n         */\n        this._leavingSub = Subscription.EMPTY;\n    }\n    /**\n     * Set initial visibility or set up subscription for changing visibility.\n     * @return {?}\n     */\n    ngOnInit() {\n        super.ngOnInit();\n        this._centeringSub = this._host._beforeCentering\n            .pipe(startWith(this._host._isCenterPosition(this._host._position)))\n            .subscribe((/**\n         * @param {?} isCentering\n         * @return {?}\n         */\n        (isCentering) => {\n            if (isCentering && !this.hasAttached()) {\n                this.attach(this._host._content);\n            }\n        }));\n        this._leavingSub = this._host._afterLeavingCenter.subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this.detach();\n        }));\n    }\n    /**\n     * Clean up centering subscription.\n     * @return {?}\n     */\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        this._centeringSub.unsubscribe();\n        this._leavingSub.unsubscribe();\n    }\n}\nMatTabBodyPortal.ɵfac = function MatTabBodyPortal_Factory(t) { return new (t || MatTabBodyPortal)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ComponentFactoryResolver), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(forwardRef(( /**\n                 * @return {?}\n                 */() => MatTabBody))), ɵngcc0.ɵɵdirectiveInject(DOCUMENT)); };\nMatTabBodyPortal.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatTabBodyPortal, selectors: [[\"\", \"matTabBodyHost\", \"\"]], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nMatTabBodyPortal.ctorParameters = () => [\n    { type: ComponentFactoryResolver },\n    { type: ViewContainerRef },\n    { type: MatTabBody, decorators: [{ type: Inject, args: [forwardRef((/**\n                     * @return {?}\n                     */\n                    () => MatTabBody)),] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTabBodyPortal, [{\n        type: Directive,\n        args: [{\n                selector: '[matTabBodyHost]'\n            }]\n    }], function () { return [{ type: ɵngcc0.ComponentFactoryResolver }, { type: ɵngcc0.ViewContainerRef }, { type: MatTabBody, decorators: [{\n                type: Inject,\n                args: [forwardRef(( /**\n                                     * @return {?}\n                                     */() => MatTabBody))]\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\nif (false) {\n    /**\n     * Subscription to events for when the tab body begins centering.\n     * @type {?}\n     * @private\n     */\n    MatTabBodyPortal.prototype._centeringSub;\n    /**\n     * Subscription to events for when the tab body finishes leaving from center position.\n     * @type {?}\n     * @private\n     */\n    MatTabBodyPortal.prototype._leavingSub;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatTabBodyPortal.prototype._host;\n}\n/**\n * Base class with all of the `MatTabBody` functionality.\n * \\@docs-private\n * @abstract\n */\n// tslint:disable-next-line:class-name\nclass _MatTabBodyBase {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _dir\n     * @param {?} changeDetectorRef\n     */\n    constructor(_elementRef, _dir, changeDetectorRef) {\n        this._elementRef = _elementRef;\n        this._dir = _dir;\n        /**\n         * Subscription to the directionality change observable.\n         */\n        this._dirChangeSubscription = Subscription.EMPTY;\n        /**\n         * Emits when an animation on the tab is complete.\n         */\n        this._translateTabComplete = new Subject();\n        /**\n         * Event emitted when the tab begins to animate towards the center as the active tab.\n         */\n        this._onCentering = new EventEmitter();\n        /**\n         * Event emitted before the centering of the tab begins.\n         */\n        this._beforeCentering = new EventEmitter();\n        /**\n         * Event emitted before the centering of the tab begins.\n         */\n        this._afterLeavingCenter = new EventEmitter();\n        /**\n         * Event emitted when the tab completes its animation towards the center.\n         */\n        this._onCentered = new EventEmitter(true);\n        // Note that the default value will always be overwritten by `MatTabBody`, but we need one\n        // anyway to prevent the animations module from throwing an error if the body is used on its own.\n        /**\n         * Duration for the tab's animation.\n         */\n        this.animationDuration = '500ms';\n        if (_dir) {\n            this._dirChangeSubscription = _dir.change.subscribe((/**\n             * @param {?} dir\n             * @return {?}\n             */\n            (dir) => {\n                this._computePositionAnimationState(dir);\n                changeDetectorRef.markForCheck();\n            }));\n        }\n        // Ensure that we get unique animation events, because the `.done` callback can get\n        // invoked twice in some browsers. See https://github.com/angular/angular/issues/24084.\n        this._translateTabComplete.pipe(distinctUntilChanged((/**\n         * @param {?} x\n         * @param {?} y\n         * @return {?}\n         */\n        (x, y) => {\n            return x.fromState === y.fromState && x.toState === y.toState;\n        }))).subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            // If the transition to the center is complete, emit an event.\n            if (this._isCenterPosition(event.toState) && this._isCenterPosition(this._position)) {\n                this._onCentered.emit();\n            }\n            if (this._isCenterPosition(event.fromState) && !this._isCenterPosition(this._position)) {\n                this._afterLeavingCenter.emit();\n            }\n        }));\n    }\n    /**\n     * The shifted index position of the tab body, where zero represents the active center tab.\n     * @param {?} position\n     * @return {?}\n     */\n    set position(position) {\n        this._positionIndex = position;\n        this._computePositionAnimationState();\n    }\n    /**\n     * After initialized, check if the content is centered and has an origin. If so, set the\n     * special position states that transition the tab from the left or right before centering.\n     * @return {?}\n     */\n    ngOnInit() {\n        if (this._position == 'center' && this.origin != null) {\n            this._position = this._computePositionFromOrigin(this.origin);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._dirChangeSubscription.unsubscribe();\n        this._translateTabComplete.complete();\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _onTranslateTabStarted(event) {\n        /** @type {?} */\n        const isCentering = this._isCenterPosition(event.toState);\n        this._beforeCentering.emit(isCentering);\n        if (isCentering) {\n            this._onCentering.emit(this._elementRef.nativeElement.clientHeight);\n        }\n    }\n    /**\n     * The text direction of the containing app.\n     * @return {?}\n     */\n    _getLayoutDirection() {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n    /**\n     * Whether the provided position state is considered center, regardless of origin.\n     * @param {?} position\n     * @return {?}\n     */\n    _isCenterPosition(position) {\n        return position == 'center' ||\n            position == 'left-origin-center' ||\n            position == 'right-origin-center';\n    }\n    /**\n     * Computes the position state that will be used for the tab-body animation trigger.\n     * @private\n     * @param {?=} dir\n     * @return {?}\n     */\n    _computePositionAnimationState(dir = this._getLayoutDirection()) {\n        if (this._positionIndex < 0) {\n            this._position = dir == 'ltr' ? 'left' : 'right';\n        }\n        else if (this._positionIndex > 0) {\n            this._position = dir == 'ltr' ? 'right' : 'left';\n        }\n        else {\n            this._position = 'center';\n        }\n    }\n    /**\n     * Computes the position state based on the specified origin position. This is used if the\n     * tab is becoming visible immediately after creation.\n     * @private\n     * @param {?} origin\n     * @return {?}\n     */\n    _computePositionFromOrigin(origin) {\n        /** @type {?} */\n        const dir = this._getLayoutDirection();\n        if ((dir == 'ltr' && origin <= 0) || (dir == 'rtl' && origin > 0)) {\n            return 'left-origin-center';\n        }\n        return 'right-origin-center';\n    }\n}\n_MatTabBodyBase.ɵfac = function _MatTabBodyBase_Factory(t) { return new (t || _MatTabBodyBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\n_MatTabBodyBase.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: _MatTabBodyBase, inputs: { animationDuration: \"animationDuration\", position: \"position\", _content: [\"content\", \"_content\"], origin: \"origin\" }, outputs: { _onCentering: \"_onCentering\", _beforeCentering: \"_beforeCentering\", _afterLeavingCenter: \"_afterLeavingCenter\", _onCentered: \"_onCentered\" } });\n/** @nocollapse */\n_MatTabBodyBase.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: ChangeDetectorRef }\n];\n_MatTabBodyBase.propDecorators = {\n    _onCentering: [{ type: Output }],\n    _beforeCentering: [{ type: Output }],\n    _afterLeavingCenter: [{ type: Output }],\n    _onCentered: [{ type: Output }],\n    _content: [{ type: Input, args: ['content',] }],\n    origin: [{ type: Input }],\n    animationDuration: [{ type: Input }],\n    position: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(_MatTabBodyBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.ChangeDetectorRef }]; }, { _onCentering: [{\n            type: Output\n        }], _beforeCentering: [{\n            type: Output\n        }], _afterLeavingCenter: [{\n            type: Output\n        }], _onCentered: [{\n            type: Output\n        }], animationDuration: [{\n            type: Input\n        }], position: [{\n            type: Input\n        }], _content: [{\n            type: Input,\n            args: ['content']\n        }], origin: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /**\n     * Current position of the tab-body in the tab-group. Zero means that the tab is visible.\n     * @type {?}\n     * @private\n     */\n    _MatTabBodyBase.prototype._positionIndex;\n    /**\n     * Subscription to the directionality change observable.\n     * @type {?}\n     * @private\n     */\n    _MatTabBodyBase.prototype._dirChangeSubscription;\n    /**\n     * Tab body position state. Used by the animation trigger for the current state.\n     * @type {?}\n     */\n    _MatTabBodyBase.prototype._position;\n    /**\n     * Emits when an animation on the tab is complete.\n     * @type {?}\n     */\n    _MatTabBodyBase.prototype._translateTabComplete;\n    /**\n     * Event emitted when the tab begins to animate towards the center as the active tab.\n     * @type {?}\n     */\n    _MatTabBodyBase.prototype._onCentering;\n    /**\n     * Event emitted before the centering of the tab begins.\n     * @type {?}\n     */\n    _MatTabBodyBase.prototype._beforeCentering;\n    /**\n     * Event emitted before the centering of the tab begins.\n     * @type {?}\n     */\n    _MatTabBodyBase.prototype._afterLeavingCenter;\n    /**\n     * Event emitted when the tab completes its animation towards the center.\n     * @type {?}\n     */\n    _MatTabBodyBase.prototype._onCentered;\n    /**\n     * The portal host inside of this container into which the tab body content will be loaded.\n     * @type {?}\n     */\n    _MatTabBodyBase.prototype._portalHost;\n    /**\n     * The tab body content to display.\n     * @type {?}\n     */\n    _MatTabBodyBase.prototype._content;\n    /**\n     * Position that will be used when the tab is immediately becoming visible after creation.\n     * @type {?}\n     */\n    _MatTabBodyBase.prototype.origin;\n    /**\n     * Duration for the tab's animation.\n     * @type {?}\n     */\n    _MatTabBodyBase.prototype.animationDuration;\n    /**\n     * @type {?}\n     * @private\n     */\n    _MatTabBodyBase.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    _MatTabBodyBase.prototype._dir;\n}\n/**\n * Wrapper for the contents of a tab.\n * \\@docs-private\n */\nclass MatTabBody extends _MatTabBodyBase {\n    /**\n     * @param {?} elementRef\n     * @param {?} dir\n     * @param {?} changeDetectorRef\n     */\n    constructor(elementRef, dir, changeDetectorRef) {\n        super(elementRef, dir, changeDetectorRef);\n    }\n}\nMatTabBody.ɵfac = function MatTabBody_Factory(t) { return new (t || MatTabBody)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\nMatTabBody.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatTabBody, selectors: [[\"mat-tab-body\"]], viewQuery: function MatTabBody_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(PortalHostDirective, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._portalHost = _t.first);\n    } }, hostAttrs: [1, \"mat-tab-body\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 3, vars: 6, consts: [[1, \"mat-tab-body-content\"], [\"content\", \"\"], [\"matTabBodyHost\", \"\"]], template: function MatTabBody_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"@translateTab.start\", function MatTabBody_Template_div_animation_translateTab_start_0_listener($event) { return ctx._onTranslateTabStarted($event); })(\"@translateTab.done\", function MatTabBody_Template_div_animation_translateTab_done_0_listener($event) { return ctx._translateTabComplete.next($event); });\n        ɵngcc0.ɵɵtemplate(2, MatTabBody_ng_template_2_Template, 0, 0, \"ng-template\", 2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"@translateTab\", ɵngcc0.ɵɵpureFunction2(3, _c2, ctx._position, ɵngcc0.ɵɵpureFunction1(1, _c1, ctx.animationDuration)));\n    } }, directives: [MatTabBodyPortal], styles: [\".mat-tab-body-content{height:100%;overflow:auto}.mat-tab-group-dynamic-height .mat-tab-body-content{overflow:hidden}\\n\"], encapsulation: 2, data: { animation: [matTabsAnimations.translateTab] } });\n/** @nocollapse */\nMatTabBody.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: ChangeDetectorRef }\n];\nMatTabBody.propDecorators = {\n    _portalHost: [{ type: ViewChild, args: [PortalHostDirective,] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTabBody, [{\n        type: Component,\n        args: [{\n                selector: 'mat-tab-body',\n                template: \"<div class=\\\"mat-tab-body-content\\\" #content\\n     [@translateTab]=\\\"{\\n        value: _position,\\n        params: {animationDuration: animationDuration}\\n     }\\\"\\n     (@translateTab.start)=\\\"_onTranslateTabStarted($event)\\\"\\n     (@translateTab.done)=\\\"_translateTabComplete.next($event)\\\">\\n  <ng-template matTabBodyHost></ng-template>\\n</div>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                animations: [matTabsAnimations.translateTab],\n                host: {\n                    'class': 'mat-tab-body'\n                },\n                styles: [\".mat-tab-body-content{height:100%;overflow:auto}.mat-tab-group-dynamic-height .mat-tab-body-content{overflow:hidden}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.ChangeDetectorRef }]; }, { _portalHost: [{\n            type: ViewChild,\n            args: [PortalHostDirective]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatTabBody.prototype._portalHost;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tabs/tab-config.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Object that can be used to configure the default options for the tabs module.\n * @record\n */\nfunction MatTabsConfig() { }\nif (false) {\n    /**\n     * Duration for the tab animation. Must be a valid CSS value (e.g. 600ms).\n     * @type {?|undefined}\n     */\n    MatTabsConfig.prototype.animationDuration;\n    /**\n     * Whether pagination should be disabled. This can be used to avoid unnecessary\n     * layout recalculations if it's known that pagination won't be required.\n     * @type {?|undefined}\n     */\n    MatTabsConfig.prototype.disablePagination;\n    /**\n     * Whether the ink bar should fit its width to the size of the tab label content.\n     * This only applies to the MDC-based tabs.\n     * @type {?|undefined}\n     */\n    MatTabsConfig.prototype.fitInkBarToContent;\n}\n/**\n * Injection token that can be used to provide the default options the tabs module.\n * @type {?}\n */\nconst MAT_TABS_CONFIG = new InjectionToken('MAT_TABS_CONFIG');\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tabs/tab-group.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Used to generate unique ID's for each tab component\n * @type {?}\n */\nlet nextId = 0;\n/**\n * A simple change event emitted on focus or selection changes.\n */\nclass MatTabChangeEvent {\n}\nif (false) {\n    /**\n     * Index of the currently-selected tab.\n     * @type {?}\n     */\n    MatTabChangeEvent.prototype.index;\n    /**\n     * Reference to the currently-selected tab.\n     * @type {?}\n     */\n    MatTabChangeEvent.prototype.tab;\n}\n// Boilerplate for applying mixins to MatTabGroup.\n/**\n * \\@docs-private\n */\nclass MatTabGroupMixinBase {\n    /**\n     * @param {?} _elementRef\n     */\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nif (false) {\n    /** @type {?} */\n    MatTabGroupMixinBase.prototype._elementRef;\n}\n/** @type {?} */\nconst _MatTabGroupMixinBase = mixinColor(mixinDisableRipple(MatTabGroupMixinBase), 'primary');\n/**\n * @record\n */\nfunction MatTabGroupBaseHeader() { }\nif (false) {\n    /** @type {?} */\n    MatTabGroupBaseHeader.prototype._alignInkBarToSelectedTab;\n    /** @type {?} */\n    MatTabGroupBaseHeader.prototype.focusIndex;\n}\n/**\n * Base class with all of the `MatTabGroupBase` functionality.\n * \\@docs-private\n * @abstract\n */\n// tslint:disable-next-line:class-name\nclass _MatTabGroupBase extends _MatTabGroupMixinBase {\n    /**\n     * @param {?} elementRef\n     * @param {?} _changeDetectorRef\n     * @param {?=} defaultConfig\n     * @param {?=} _animationMode\n     */\n    constructor(elementRef, _changeDetectorRef, defaultConfig, _animationMode) {\n        super(elementRef);\n        this._changeDetectorRef = _changeDetectorRef;\n        this._animationMode = _animationMode;\n        /**\n         * All of the tabs that belong to the group.\n         */\n        this._tabs = new QueryList();\n        /**\n         * The tab index that should be selected after the content has been checked.\n         */\n        this._indexToSelect = 0;\n        /**\n         * Snapshot of the height of the tab body wrapper before another tab is activated.\n         */\n        this._tabBodyWrapperHeight = 0;\n        /**\n         * Subscription to tabs being added/removed.\n         */\n        this._tabsSubscription = Subscription.EMPTY;\n        /**\n         * Subscription to changes in the tab labels.\n         */\n        this._tabLabelSubscription = Subscription.EMPTY;\n        this._dynamicHeight = false;\n        this._selectedIndex = null;\n        /**\n         * Position of the tab header.\n         */\n        this.headerPosition = 'above';\n        /**\n         * Output to enable support for two-way binding on `[(selectedIndex)]`\n         */\n        this.selectedIndexChange = new EventEmitter();\n        /**\n         * Event emitted when focus has changed within a tab group.\n         */\n        this.focusChange = new EventEmitter();\n        /**\n         * Event emitted when the body animation has completed\n         */\n        this.animationDone = new EventEmitter();\n        /**\n         * Event emitted when the tab selection has changed.\n         */\n        this.selectedTabChange = new EventEmitter(true);\n        this._groupId = nextId++;\n        this.animationDuration = defaultConfig && defaultConfig.animationDuration ?\n            defaultConfig.animationDuration : '500ms';\n        this.disablePagination = defaultConfig && defaultConfig.disablePagination != null ?\n            defaultConfig.disablePagination : false;\n    }\n    /**\n     * Whether the tab group should grow to the size of the active tab.\n     * @return {?}\n     */\n    get dynamicHeight() { return this._dynamicHeight; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set dynamicHeight(value) { this._dynamicHeight = coerceBooleanProperty(value); }\n    /**\n     * The index of the active tab.\n     * @return {?}\n     */\n    get selectedIndex() { return this._selectedIndex; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set selectedIndex(value) {\n        this._indexToSelect = coerceNumberProperty(value, null);\n    }\n    /**\n     * Duration for the tab animation. Will be normalized to milliseconds if no units are set.\n     * @return {?}\n     */\n    get animationDuration() { return this._animationDuration; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set animationDuration(value) {\n        this._animationDuration = /^\\d+$/.test(value) ? value + 'ms' : value;\n    }\n    /**\n     * Background color of the tab group.\n     * @return {?}\n     */\n    get backgroundColor() { return this._backgroundColor; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set backgroundColor(value) {\n        /** @type {?} */\n        const nativeElement = this._elementRef.nativeElement;\n        nativeElement.classList.remove(`mat-background-${this.backgroundColor}`);\n        if (value) {\n            nativeElement.classList.add(`mat-background-${value}`);\n        }\n        this._backgroundColor = value;\n    }\n    /**\n     * After the content is checked, this component knows what tabs have been defined\n     * and what the selected index should be. This is where we can know exactly what position\n     * each tab should be in according to the new selected index, and additionally we know how\n     * a new selected tab should transition in (from the left or right).\n     * @return {?}\n     */\n    ngAfterContentChecked() {\n        // Don't clamp the `indexToSelect` immediately in the setter because it can happen that\n        // the amount of tabs changes before the actual change detection runs.\n        /** @type {?} */\n        const indexToSelect = this._indexToSelect = this._clampTabIndex(this._indexToSelect);\n        // If there is a change in selected index, emit a change event. Should not trigger if\n        // the selected index has not yet been initialized.\n        if (this._selectedIndex != indexToSelect) {\n            /** @type {?} */\n            const isFirstRun = this._selectedIndex == null;\n            if (!isFirstRun) {\n                this.selectedTabChange.emit(this._createChangeEvent(indexToSelect));\n            }\n            // Changing these values after change detection has run\n            // since the checked content may contain references to them.\n            Promise.resolve().then((/**\n             * @return {?}\n             */\n            () => {\n                this._tabs.forEach((/**\n                 * @param {?} tab\n                 * @param {?} index\n                 * @return {?}\n                 */\n                (tab, index) => tab.isActive = index === indexToSelect));\n                if (!isFirstRun) {\n                    this.selectedIndexChange.emit(indexToSelect);\n                }\n            }));\n        }\n        // Setup the position for each tab and optionally setup an origin on the next selected tab.\n        this._tabs.forEach((/**\n         * @param {?} tab\n         * @param {?} index\n         * @return {?}\n         */\n        (tab, index) => {\n            tab.position = index - indexToSelect;\n            // If there is already a selected tab, then set up an origin for the next selected tab\n            // if it doesn't have one already.\n            if (this._selectedIndex != null && tab.position == 0 && !tab.origin) {\n                tab.origin = indexToSelect - this._selectedIndex;\n            }\n        }));\n        if (this._selectedIndex !== indexToSelect) {\n            this._selectedIndex = indexToSelect;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._subscribeToAllTabChanges();\n        this._subscribeToTabLabels();\n        // Subscribe to changes in the amount of tabs, in order to be\n        // able to re-render the content as new tabs are added or removed.\n        this._tabsSubscription = this._tabs.changes.subscribe((/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            const indexToSelect = this._clampTabIndex(this._indexToSelect);\n            // Maintain the previously-selected tab if a new tab is added or removed and there is no\n            // explicit change that selects a different tab.\n            if (indexToSelect === this._selectedIndex) {\n                /** @type {?} */\n                const tabs = this._tabs.toArray();\n                for (let i = 0; i < tabs.length; i++) {\n                    if (tabs[i].isActive) {\n                        // Assign both to the `_indexToSelect` and `_selectedIndex` so we don't fire a changed\n                        // event, otherwise the consumer may end up in an infinite loop in some edge cases like\n                        // adding a tab within the `selectedIndexChange` event.\n                        this._indexToSelect = this._selectedIndex = i;\n                        break;\n                    }\n                }\n            }\n            this._changeDetectorRef.markForCheck();\n        }));\n    }\n    /**\n     * Listens to changes in all of the tabs.\n     * @private\n     * @return {?}\n     */\n    _subscribeToAllTabChanges() {\n        // Since we use a query with `descendants: true` to pick up the tabs, we may end up catching\n        // some that are inside of nested tab groups. We filter them out manually by checking that\n        // the closest group to the tab is the current one.\n        this._allTabs.changes\n            .pipe(startWith(this._allTabs))\n            .subscribe((/**\n         * @param {?} tabs\n         * @return {?}\n         */\n        (tabs) => {\n            this._tabs.reset(tabs.filter((/**\n             * @param {?} tab\n             * @return {?}\n             */\n            tab => {\n                // @breaking-change 10.0.0 Remove null check for `_closestTabGroup`\n                // once it becomes a required parameter in MatTab.\n                return !tab._closestTabGroup || tab._closestTabGroup === this;\n            })));\n            this._tabs.notifyOnChanges();\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._tabs.destroy();\n        this._tabsSubscription.unsubscribe();\n        this._tabLabelSubscription.unsubscribe();\n    }\n    /**\n     * Re-aligns the ink bar to the selected tab element.\n     * @return {?}\n     */\n    realignInkBar() {\n        if (this._tabHeader) {\n            this._tabHeader._alignInkBarToSelectedTab();\n        }\n    }\n    /**\n     * @param {?} index\n     * @return {?}\n     */\n    _focusChanged(index) {\n        this.focusChange.emit(this._createChangeEvent(index));\n    }\n    /**\n     * @private\n     * @param {?} index\n     * @return {?}\n     */\n    _createChangeEvent(index) {\n        /** @type {?} */\n        const event = new MatTabChangeEvent;\n        event.index = index;\n        if (this._tabs && this._tabs.length) {\n            event.tab = this._tabs.toArray()[index];\n        }\n        return event;\n    }\n    /**\n     * Subscribes to changes in the tab labels. This is needed, because the \\@Input for the label is\n     * on the MatTab component, whereas the data binding is inside the MatTabGroup. In order for the\n     * binding to be updated, we need to subscribe to changes in it and trigger change detection\n     * manually.\n     * @private\n     * @return {?}\n     */\n    _subscribeToTabLabels() {\n        if (this._tabLabelSubscription) {\n            this._tabLabelSubscription.unsubscribe();\n        }\n        this._tabLabelSubscription = merge(...this._tabs.map((/**\n         * @param {?} tab\n         * @return {?}\n         */\n        tab => tab._stateChanges)))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => this._changeDetectorRef.markForCheck()));\n    }\n    /**\n     * Clamps the given index to the bounds of 0 and the tabs length.\n     * @private\n     * @param {?} index\n     * @return {?}\n     */\n    _clampTabIndex(index) {\n        // Note the `|| 0`, which ensures that values like NaN can't get through\n        // and which would otherwise throw the component into an infinite loop\n        // (since Math.max(NaN, 0) === NaN).\n        return Math.min(this._tabs.length - 1, Math.max(index || 0, 0));\n    }\n    /**\n     * Returns a unique id for each tab label element\n     * @param {?} i\n     * @return {?}\n     */\n    _getTabLabelId(i) {\n        return `mat-tab-label-${this._groupId}-${i}`;\n    }\n    /**\n     * Returns a unique id for each tab content element\n     * @param {?} i\n     * @return {?}\n     */\n    _getTabContentId(i) {\n        return `mat-tab-content-${this._groupId}-${i}`;\n    }\n    /**\n     * Sets the height of the body wrapper to the height of the activating tab if dynamic\n     * height property is true.\n     * @param {?} tabHeight\n     * @return {?}\n     */\n    _setTabBodyWrapperHeight(tabHeight) {\n        if (!this._dynamicHeight || !this._tabBodyWrapperHeight) {\n            return;\n        }\n        /** @type {?} */\n        const wrapper = this._tabBodyWrapper.nativeElement;\n        wrapper.style.height = this._tabBodyWrapperHeight + 'px';\n        // This conditional forces the browser to paint the height so that\n        // the animation to the new height can have an origin.\n        if (this._tabBodyWrapper.nativeElement.offsetHeight) {\n            wrapper.style.height = tabHeight + 'px';\n        }\n    }\n    /**\n     * Removes the height of the tab body wrapper.\n     * @return {?}\n     */\n    _removeTabBodyWrapperHeight() {\n        /** @type {?} */\n        const wrapper = this._tabBodyWrapper.nativeElement;\n        this._tabBodyWrapperHeight = wrapper.clientHeight;\n        wrapper.style.height = '';\n        this.animationDone.emit();\n    }\n    /**\n     * Handle click events, setting new selected index if appropriate.\n     * @param {?} tab\n     * @param {?} tabHeader\n     * @param {?} index\n     * @return {?}\n     */\n    _handleClick(tab, tabHeader, index) {\n        if (!tab.disabled) {\n            this.selectedIndex = tabHeader.focusIndex = index;\n        }\n    }\n    /**\n     * Retrieves the tabindex for the tab.\n     * @param {?} tab\n     * @param {?} idx\n     * @return {?}\n     */\n    _getTabIndex(tab, idx) {\n        if (tab.disabled) {\n            return null;\n        }\n        return this.selectedIndex === idx ? 0 : -1;\n    }\n}\n_MatTabGroupBase.ɵfac = function _MatTabGroupBase_Factory(t) { return new (t || _MatTabGroupBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_TABS_CONFIG, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\n_MatTabGroupBase.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: _MatTabGroupBase, inputs: { headerPosition: \"headerPosition\", animationDuration: \"animationDuration\", disablePagination: \"disablePagination\", dynamicHeight: \"dynamicHeight\", selectedIndex: \"selectedIndex\", backgroundColor: \"backgroundColor\" }, outputs: { selectedIndexChange: \"selectedIndexChange\", focusChange: \"focusChange\", animationDone: \"animationDone\", selectedTabChange: \"selectedTabChange\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\n_MatTabGroupBase.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_TABS_CONFIG,] }, { type: Optional }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n_MatTabGroupBase.propDecorators = {\n    dynamicHeight: [{ type: Input }],\n    selectedIndex: [{ type: Input }],\n    headerPosition: [{ type: Input }],\n    animationDuration: [{ type: Input }],\n    disablePagination: [{ type: Input }],\n    backgroundColor: [{ type: Input }],\n    selectedIndexChange: [{ type: Output }],\n    focusChange: [{ type: Output }],\n    animationDone: [{ type: Output }],\n    selectedTabChange: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(_MatTabGroupBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_TABS_CONFIG]\n            }, {\n                type: Optional\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { headerPosition: [{\n            type: Input\n        }], selectedIndexChange: [{\n            type: Output\n        }], focusChange: [{\n            type: Output\n        }], animationDone: [{\n            type: Output\n        }], selectedTabChange: [{\n            type: Output\n        }], animationDuration: [{\n            type: Input\n        }], disablePagination: [{\n            type: Input\n        }], dynamicHeight: [{\n            type: Input\n        }], selectedIndex: [{\n            type: Input\n        }], backgroundColor: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    _MatTabGroupBase.ngAcceptInputType_dynamicHeight;\n    /** @type {?} */\n    _MatTabGroupBase.ngAcceptInputType_animationDuration;\n    /** @type {?} */\n    _MatTabGroupBase.ngAcceptInputType_selectedIndex;\n    /** @type {?} */\n    _MatTabGroupBase.ngAcceptInputType_disableRipple;\n    /**\n     * All tabs inside the tab group. This includes tabs that belong to groups that are nested\n     * inside the current one. We filter out only the tabs that belong to this group in `_tabs`.\n     * @type {?}\n     */\n    _MatTabGroupBase.prototype._allTabs;\n    /** @type {?} */\n    _MatTabGroupBase.prototype._tabBodyWrapper;\n    /** @type {?} */\n    _MatTabGroupBase.prototype._tabHeader;\n    /**\n     * All of the tabs that belong to the group.\n     * @type {?}\n     */\n    _MatTabGroupBase.prototype._tabs;\n    /**\n     * The tab index that should be selected after the content has been checked.\n     * @type {?}\n     * @private\n     */\n    _MatTabGroupBase.prototype._indexToSelect;\n    /**\n     * Snapshot of the height of the tab body wrapper before another tab is activated.\n     * @type {?}\n     * @private\n     */\n    _MatTabGroupBase.prototype._tabBodyWrapperHeight;\n    /**\n     * Subscription to tabs being added/removed.\n     * @type {?}\n     * @private\n     */\n    _MatTabGroupBase.prototype._tabsSubscription;\n    /**\n     * Subscription to changes in the tab labels.\n     * @type {?}\n     * @private\n     */\n    _MatTabGroupBase.prototype._tabLabelSubscription;\n    /**\n     * @type {?}\n     * @private\n     */\n    _MatTabGroupBase.prototype._dynamicHeight;\n    /**\n     * @type {?}\n     * @private\n     */\n    _MatTabGroupBase.prototype._selectedIndex;\n    /**\n     * Position of the tab header.\n     * @type {?}\n     */\n    _MatTabGroupBase.prototype.headerPosition;\n    /**\n     * @type {?}\n     * @private\n     */\n    _MatTabGroupBase.prototype._animationDuration;\n    /**\n     * Whether pagination should be disabled. This can be used to avoid unnecessary\n     * layout recalculations if it's known that pagination won't be required.\n     * @type {?}\n     */\n    _MatTabGroupBase.prototype.disablePagination;\n    /**\n     * @type {?}\n     * @private\n     */\n    _MatTabGroupBase.prototype._backgroundColor;\n    /**\n     * Output to enable support for two-way binding on `[(selectedIndex)]`\n     * @type {?}\n     */\n    _MatTabGroupBase.prototype.selectedIndexChange;\n    /**\n     * Event emitted when focus has changed within a tab group.\n     * @type {?}\n     */\n    _MatTabGroupBase.prototype.focusChange;\n    /**\n     * Event emitted when the body animation has completed\n     * @type {?}\n     */\n    _MatTabGroupBase.prototype.animationDone;\n    /**\n     * Event emitted when the tab selection has changed.\n     * @type {?}\n     */\n    _MatTabGroupBase.prototype.selectedTabChange;\n    /**\n     * @type {?}\n     * @private\n     */\n    _MatTabGroupBase.prototype._groupId;\n    /**\n     * @type {?}\n     * @protected\n     */\n    _MatTabGroupBase.prototype._changeDetectorRef;\n    /** @type {?} */\n    _MatTabGroupBase.prototype._animationMode;\n}\n/**\n * Material design tab-group component. Supports basic tab pairs (label + content) and includes\n * animated ink-bar, keyboard navigation, and screen reader.\n * See: https://material.io/design/components/tabs.html\n */\nclass MatTabGroup extends _MatTabGroupBase {\n    /**\n     * @param {?} elementRef\n     * @param {?} changeDetectorRef\n     * @param {?=} defaultConfig\n     * @param {?=} animationMode\n     */\n    constructor(elementRef, changeDetectorRef, defaultConfig, animationMode) {\n        super(elementRef, changeDetectorRef, defaultConfig, animationMode);\n    }\n}\nMatTabGroup.ɵfac = function MatTabGroup_Factory(t) { return new (t || MatTabGroup)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_TABS_CONFIG, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatTabGroup.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatTabGroup, selectors: [[\"mat-tab-group\"]], contentQueries: function MatTabGroup_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatTab, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._allTabs = _t);\n    } }, viewQuery: function MatTabGroup_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c3, true);\n        ɵngcc0.ɵɵviewQuery(_c4, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabBodyWrapper = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabHeader = _t.first);\n    } }, hostAttrs: [1, \"mat-tab-group\"], hostVars: 4, hostBindings: function MatTabGroup_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-tab-group-dynamic-height\", ctx.dynamicHeight)(\"mat-tab-group-inverted-header\", ctx.headerPosition === \"below\");\n    } }, inputs: { color: \"color\", disableRipple: \"disableRipple\" }, exportAs: [\"matTabGroup\"], features: [ɵngcc0.ɵɵProvidersFeature([{\n                provide: MAT_TAB_GROUP,\n                useExisting: MatTabGroup\n            }]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 6, vars: 7, consts: [[3, \"selectedIndex\", \"disableRipple\", \"disablePagination\", \"indexFocused\", \"selectFocusedIndex\"], [\"tabHeader\", \"\"], [\"class\", \"mat-tab-label mat-focus-indicator\", \"role\", \"tab\", \"matTabLabelWrapper\", \"\", \"mat-ripple\", \"\", \"cdkMonitorElementFocus\", \"\", 3, \"id\", \"mat-tab-label-active\", \"disabled\", \"matRippleDisabled\", \"click\", 4, \"ngFor\", \"ngForOf\"], [1, \"mat-tab-body-wrapper\"], [\"tabBodyWrapper\", \"\"], [\"role\", \"tabpanel\", 3, \"id\", \"mat-tab-body-active\", \"content\", \"position\", \"origin\", \"animationDuration\", \"_onCentered\", \"_onCentering\", 4, \"ngFor\", \"ngForOf\"], [\"role\", \"tab\", \"matTabLabelWrapper\", \"\", \"mat-ripple\", \"\", \"cdkMonitorElementFocus\", \"\", 1, \"mat-tab-label\", \"mat-focus-indicator\", 3, \"id\", \"disabled\", \"matRippleDisabled\", \"click\"], [1, \"mat-tab-label-content\"], [3, \"ngIf\"], [3, \"cdkPortalOutlet\"], [\"role\", \"tabpanel\", 3, \"id\", \"content\", \"position\", \"origin\", \"animationDuration\", \"_onCentered\", \"_onCentering\"]], template: function MatTabGroup_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"mat-tab-header\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"indexFocused\", function MatTabGroup_Template_mat_tab_header_indexFocused_0_listener($event) { return ctx._focusChanged($event); })(\"selectFocusedIndex\", function MatTabGroup_Template_mat_tab_header_selectFocusedIndex_0_listener($event) { return ctx.selectedIndex = $event; });\n        ɵngcc0.ɵɵtemplate(2, MatTabGroup_div_2_Template, 4, 14, \"div\", 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(3, \"div\", 3, 4);\n        ɵngcc0.ɵɵtemplate(5, MatTabGroup_mat_tab_body_5_Template, 1, 8, \"mat-tab-body\", 5);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"selectedIndex\", ctx.selectedIndex || 0)(\"disableRipple\", ctx.disableRipple)(\"disablePagination\", ctx.disablePagination);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx._tabs);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx._tabs);\n    } }, directives: function () { return [MatTabHeader, ɵngcc2.NgForOf, MatTabLabelWrapper, ɵngcc3.MatRipple, ɵngcc4.CdkMonitorFocus, ɵngcc2.NgIf, ɵngcc5.CdkPortalOutlet, MatTabBody]; }, styles: [\".mat-tab-group{display:flex;flex-direction:column}.mat-tab-group.mat-tab-group-inverted-header{flex-direction:column-reverse}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:none}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-label:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-label.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-label.mat-tab-disabled{opacity:.5}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-label{opacity:1}@media(max-width: 599px){.mat-tab-label{padding:0 12px}}@media(max-width: 959px){.mat-tab-label{padding:0 12px}}.mat-tab-group[mat-stretch-tabs]>.mat-tab-header .mat-tab-label{flex-basis:0;flex-grow:1}.mat-tab-body-wrapper{position:relative;overflow:hidden;display:flex;transition:height 500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-tab-body-wrapper{transition:none;animation:none}.mat-tab-body{top:0;left:0;right:0;bottom:0;position:absolute;display:block;overflow:hidden;flex-basis:100%}.mat-tab-body.mat-tab-body-active{position:relative;overflow-x:hidden;overflow-y:auto;z-index:1;flex-grow:1}.mat-tab-group.mat-tab-group-dynamic-height .mat-tab-body.mat-tab-body-active{overflow-y:hidden}\\n\"], encapsulation: 2 });\n/** @nocollapse */\nMatTabGroup.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_TABS_CONFIG,] }, { type: Optional }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatTabGroup.propDecorators = {\n    _allTabs: [{ type: ContentChildren, args: [MatTab, { descendants: true },] }],\n    _tabBodyWrapper: [{ type: ViewChild, args: ['tabBodyWrapper',] }],\n    _tabHeader: [{ type: ViewChild, args: ['tabHeader',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTabGroup, [{\n        type: Component,\n        args: [{\n                selector: 'mat-tab-group',\n                exportAs: 'matTabGroup',\n                template: \"<mat-tab-header #tabHeader\\n               [selectedIndex]=\\\"selectedIndex || 0\\\"\\n               [disableRipple]=\\\"disableRipple\\\"\\n               [disablePagination]=\\\"disablePagination\\\"\\n               (indexFocused)=\\\"_focusChanged($event)\\\"\\n               (selectFocusedIndex)=\\\"selectedIndex = $event\\\">\\n  <div class=\\\"mat-tab-label mat-focus-indicator\\\" role=\\\"tab\\\" matTabLabelWrapper mat-ripple cdkMonitorElementFocus\\n       *ngFor=\\\"let tab of _tabs; let i = index\\\"\\n       [id]=\\\"_getTabLabelId(i)\\\"\\n       [attr.tabIndex]=\\\"_getTabIndex(tab, i)\\\"\\n       [attr.aria-posinset]=\\\"i + 1\\\"\\n       [attr.aria-setsize]=\\\"_tabs.length\\\"\\n       [attr.aria-controls]=\\\"_getTabContentId(i)\\\"\\n       [attr.aria-selected]=\\\"selectedIndex == i\\\"\\n       [attr.aria-label]=\\\"tab.ariaLabel || null\\\"\\n       [attr.aria-labelledby]=\\\"(!tab.ariaLabel && tab.ariaLabelledby) ? tab.ariaLabelledby : null\\\"\\n       [class.mat-tab-label-active]=\\\"selectedIndex == i\\\"\\n       [disabled]=\\\"tab.disabled\\\"\\n       [matRippleDisabled]=\\\"tab.disabled || disableRipple\\\"\\n       (click)=\\\"_handleClick(tab, tabHeader, i)\\\">\\n\\n\\n    <div class=\\\"mat-tab-label-content\\\">\\n      <!-- If there is a label template, use it. -->\\n      <ng-template [ngIf]=\\\"tab.templateLabel\\\">\\n        <ng-template [cdkPortalOutlet]=\\\"tab.templateLabel\\\"></ng-template>\\n      </ng-template>\\n\\n      <!-- If there is not a label template, fall back to the text label. -->\\n      <ng-template [ngIf]=\\\"!tab.templateLabel\\\">{{tab.textLabel}}</ng-template>\\n    </div>\\n  </div>\\n</mat-tab-header>\\n\\n<div\\n  class=\\\"mat-tab-body-wrapper\\\"\\n  [class._mat-animation-noopable]=\\\"_animationMode === 'NoopAnimations'\\\"\\n  #tabBodyWrapper>\\n  <mat-tab-body role=\\\"tabpanel\\\"\\n               *ngFor=\\\"let tab of _tabs; let i = index\\\"\\n               [id]=\\\"_getTabContentId(i)\\\"\\n               [attr.aria-labelledby]=\\\"_getTabLabelId(i)\\\"\\n               [class.mat-tab-body-active]=\\\"selectedIndex == i\\\"\\n               [content]=\\\"tab.content!\\\"\\n               [position]=\\\"tab.position!\\\"\\n               [origin]=\\\"tab.origin\\\"\\n               [animationDuration]=\\\"animationDuration\\\"\\n               (_onCentered)=\\\"_removeTabBodyWrapperHeight()\\\"\\n               (_onCentering)=\\\"_setTabBodyWrapperHeight($event)\\\">\\n  </mat-tab-body>\\n</div>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                inputs: ['color', 'disableRipple'],\n                providers: [{\n                        provide: MAT_TAB_GROUP,\n                        useExisting: MatTabGroup\n                    }],\n                host: {\n                    'class': 'mat-tab-group',\n                    '[class.mat-tab-group-dynamic-height]': 'dynamicHeight',\n                    '[class.mat-tab-group-inverted-header]': 'headerPosition === \"below\"'\n                },\n                styles: [\".mat-tab-group{display:flex;flex-direction:column}.mat-tab-group.mat-tab-group-inverted-header{flex-direction:column-reverse}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:none}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-label:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-label.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-label.mat-tab-disabled{opacity:.5}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-label{opacity:1}@media(max-width: 599px){.mat-tab-label{padding:0 12px}}@media(max-width: 959px){.mat-tab-label{padding:0 12px}}.mat-tab-group[mat-stretch-tabs]>.mat-tab-header .mat-tab-label{flex-basis:0;flex-grow:1}.mat-tab-body-wrapper{position:relative;overflow:hidden;display:flex;transition:height 500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-tab-body-wrapper{transition:none;animation:none}.mat-tab-body{top:0;left:0;right:0;bottom:0;position:absolute;display:block;overflow:hidden;flex-basis:100%}.mat-tab-body.mat-tab-body-active{position:relative;overflow-x:hidden;overflow-y:auto;z-index:1;flex-grow:1}.mat-tab-group.mat-tab-group-dynamic-height .mat-tab-body.mat-tab-body-active{overflow-y:hidden}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_TABS_CONFIG]\n            }, {\n                type: Optional\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { _allTabs: [{\n            type: ContentChildren,\n            args: [MatTab, { descendants: true }]\n        }], _tabBodyWrapper: [{\n            type: ViewChild,\n            args: ['tabBodyWrapper']\n        }], _tabHeader: [{\n            type: ViewChild,\n            args: ['tabHeader']\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatTabGroup.prototype._allTabs;\n    /** @type {?} */\n    MatTabGroup.prototype._tabBodyWrapper;\n    /** @type {?} */\n    MatTabGroup.prototype._tabHeader;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tabs/tab-label-wrapper.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Boilerplate for applying mixins to MatTabLabelWrapper.\n/**\n * \\@docs-private\n */\nclass MatTabLabelWrapperBase {\n}\n/** @type {?} */\nconst _MatTabLabelWrapperMixinBase = mixinDisabled(MatTabLabelWrapperBase);\n/**\n * Used in the `mat-tab-group` view to display tab labels.\n * \\@docs-private\n */\nclass MatTabLabelWrapper extends _MatTabLabelWrapperMixinBase {\n    /**\n     * @param {?} elementRef\n     */\n    constructor(elementRef) {\n        super();\n        this.elementRef = elementRef;\n    }\n    /**\n     * Sets focus on the wrapper element\n     * @return {?}\n     */\n    focus() {\n        this.elementRef.nativeElement.focus();\n    }\n    /**\n     * @return {?}\n     */\n    getOffsetLeft() {\n        return this.elementRef.nativeElement.offsetLeft;\n    }\n    /**\n     * @return {?}\n     */\n    getOffsetWidth() {\n        return this.elementRef.nativeElement.offsetWidth;\n    }\n}\nMatTabLabelWrapper.ɵfac = function MatTabLabelWrapper_Factory(t) { return new (t || MatTabLabelWrapper)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nMatTabLabelWrapper.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatTabLabelWrapper, selectors: [[\"\", \"matTabLabelWrapper\", \"\"]], hostVars: 3, hostBindings: function MatTabLabelWrapper_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-disabled\", !!ctx.disabled);\n        ɵngcc0.ɵɵclassProp(\"mat-tab-disabled\", ctx.disabled);\n    } }, inputs: { disabled: \"disabled\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nMatTabLabelWrapper.ctorParameters = () => [\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTabLabelWrapper, [{\n        type: Directive,\n        args: [{\n                selector: '[matTabLabelWrapper]',\n                inputs: ['disabled'],\n                host: {\n                    '[class.mat-tab-disabled]': 'disabled',\n                    '[attr.aria-disabled]': '!!disabled'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, null); })();\nif (false) {\n    /** @type {?} */\n    MatTabLabelWrapper.ngAcceptInputType_disabled;\n    /** @type {?} */\n    MatTabLabelWrapper.prototype.elementRef;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tabs/paginated-tab-header.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Config used to bind passive event listeners\n * @type {?}\n */\nconst passiveEventListenerOptions = (/** @type {?} */ (normalizePassiveListenerOptions({ passive: true })));\n/**\n * The distance in pixels that will be overshot when scrolling a tab label into view. This helps\n * provide a small affordance to the label next to it.\n * @type {?}\n */\nconst EXAGGERATED_OVERSCROLL = 60;\n/**\n * Amount of milliseconds to wait before starting to scroll the header automatically.\n * Set a little conservatively in order to handle fake events dispatched on touch devices.\n * @type {?}\n */\nconst HEADER_SCROLL_DELAY = 650;\n/**\n * Interval in milliseconds at which to scroll the header\n * while the user is holding their pointer.\n * @type {?}\n */\nconst HEADER_SCROLL_INTERVAL = 100;\n/**\n * Base class for a tab header that supported pagination.\n * \\@docs-private\n * @abstract\n */\nclass MatPaginatedTabHeader {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _changeDetectorRef\n     * @param {?} _viewportRuler\n     * @param {?} _dir\n     * @param {?} _ngZone\n     * @param {?=} _platform\n     * @param {?=} _animationMode\n     */\n    constructor(_elementRef, _changeDetectorRef, _viewportRuler, _dir, _ngZone, _platform, _animationMode) {\n        this._elementRef = _elementRef;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._viewportRuler = _viewportRuler;\n        this._dir = _dir;\n        this._ngZone = _ngZone;\n        this._platform = _platform;\n        this._animationMode = _animationMode;\n        /**\n         * The distance in pixels that the tab labels should be translated to the left.\n         */\n        this._scrollDistance = 0;\n        /**\n         * Whether the header should scroll to the selected index after the view has been checked.\n         */\n        this._selectedIndexChanged = false;\n        /**\n         * Emits when the component is destroyed.\n         */\n        this._destroyed = new Subject();\n        /**\n         * Whether the controls for pagination should be displayed\n         */\n        this._showPaginationControls = false;\n        /**\n         * Whether the tab list can be scrolled more towards the end of the tab label list.\n         */\n        this._disableScrollAfter = true;\n        /**\n         * Whether the tab list can be scrolled more towards the beginning of the tab label list.\n         */\n        this._disableScrollBefore = true;\n        /**\n         * Stream that will stop the automated scrolling.\n         */\n        this._stopScrolling = new Subject();\n        /**\n         * Whether pagination should be disabled. This can be used to avoid unnecessary\n         * layout recalculations if it's known that pagination won't be required.\n         */\n        this.disablePagination = false;\n        this._selectedIndex = 0;\n        /**\n         * Event emitted when the option is selected.\n         */\n        this.selectFocusedIndex = new EventEmitter();\n        /**\n         * Event emitted when a label is focused.\n         */\n        this.indexFocused = new EventEmitter();\n        // Bind the `mouseleave` event on the outside since it doesn't change anything in the view.\n        _ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            fromEvent(_elementRef.nativeElement, 'mouseleave')\n                .pipe(takeUntil(this._destroyed))\n                .subscribe((/**\n             * @return {?}\n             */\n            () => {\n                this._stopInterval();\n            }));\n        }));\n    }\n    /**\n     * The index of the active tab.\n     * @return {?}\n     */\n    get selectedIndex() { return this._selectedIndex; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set selectedIndex(value) {\n        value = coerceNumberProperty(value);\n        if (this._selectedIndex != value) {\n            this._selectedIndexChanged = true;\n            this._selectedIndex = value;\n            if (this._keyManager) {\n                this._keyManager.updateActiveItem(value);\n            }\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        // We need to handle these events manually, because we want to bind passive event listeners.\n        fromEvent(this._previousPaginator.nativeElement, 'touchstart', passiveEventListenerOptions)\n            .pipe(takeUntil(this._destroyed))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._handlePaginatorPress('before');\n        }));\n        fromEvent(this._nextPaginator.nativeElement, 'touchstart', passiveEventListenerOptions)\n            .pipe(takeUntil(this._destroyed))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._handlePaginatorPress('after');\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        /** @type {?} */\n        const dirChange = this._dir ? this._dir.change : of(null);\n        /** @type {?} */\n        const resize = this._viewportRuler.change(150);\n        /** @type {?} */\n        const realign = (/**\n         * @return {?}\n         */\n        () => {\n            this.updatePagination();\n            this._alignInkBarToSelectedTab();\n        });\n        this._keyManager = new FocusKeyManager(this._items)\n            .withHorizontalOrientation(this._getLayoutDirection())\n            .withWrap();\n        this._keyManager.updateActiveItem(0);\n        // Defer the first call in order to allow for slower browsers to lay out the elements.\n        // This helps in cases where the user lands directly on a page with paginated tabs.\n        typeof requestAnimationFrame !== 'undefined' ? requestAnimationFrame(realign) : realign();\n        // On dir change or window resize, realign the ink bar and update the orientation of\n        // the key manager if the direction has changed.\n        merge(dirChange, resize, this._items.changes).pipe(takeUntil(this._destroyed)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            // We need to defer this to give the browser some time to recalculate the element dimensions.\n            Promise.resolve().then(realign);\n            this._keyManager.withHorizontalOrientation(this._getLayoutDirection());\n        }));\n        // If there is a change in the focus key manager we need to emit the `indexFocused`\n        // event in order to provide a public event that notifies about focus changes. Also we realign\n        // the tabs container by scrolling the new focused tab into the visible section.\n        this._keyManager.change.pipe(takeUntil(this._destroyed)).subscribe((/**\n         * @param {?} newFocusIndex\n         * @return {?}\n         */\n        newFocusIndex => {\n            this.indexFocused.emit(newFocusIndex);\n            this._setTabFocus(newFocusIndex);\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentChecked() {\n        // If the number of tab labels have changed, check if scrolling should be enabled\n        if (this._tabLabelCount != this._items.length) {\n            this.updatePagination();\n            this._tabLabelCount = this._items.length;\n            this._changeDetectorRef.markForCheck();\n        }\n        // If the selected index has changed, scroll to the label and check if the scrolling controls\n        // should be disabled.\n        if (this._selectedIndexChanged) {\n            this._scrollToLabel(this._selectedIndex);\n            this._checkScrollingControls();\n            this._alignInkBarToSelectedTab();\n            this._selectedIndexChanged = false;\n            this._changeDetectorRef.markForCheck();\n        }\n        // If the scroll distance has been changed (tab selected, focused, scroll controls activated),\n        // then translate the header to reflect this.\n        if (this._scrollDistanceChanged) {\n            this._updateTabScrollPosition();\n            this._scrollDistanceChanged = false;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n        this._stopScrolling.complete();\n    }\n    /**\n     * Handles keyboard events on the header.\n     * @param {?} event\n     * @return {?}\n     */\n    _handleKeydown(event) {\n        // We don't handle any key bindings with a modifier key.\n        if (hasModifierKey(event)) {\n            return;\n        }\n        switch (event.keyCode) {\n            case HOME:\n                this._keyManager.setFirstItemActive();\n                event.preventDefault();\n                break;\n            case END:\n                this._keyManager.setLastItemActive();\n                event.preventDefault();\n                break;\n            case ENTER:\n            case SPACE:\n                if (this.focusIndex !== this.selectedIndex) {\n                    this.selectFocusedIndex.emit(this.focusIndex);\n                    this._itemSelected(event);\n                }\n                break;\n            default:\n                this._keyManager.onKeydown(event);\n        }\n    }\n    /**\n     * Callback for when the MutationObserver detects that the content has changed.\n     * @return {?}\n     */\n    _onContentChanges() {\n        /** @type {?} */\n        const textContent = this._elementRef.nativeElement.textContent;\n        // We need to diff the text content of the header, because the MutationObserver callback\n        // will fire even if the text content didn't change which is inefficient and is prone\n        // to infinite loops if a poorly constructed expression is passed in (see #14249).\n        if (textContent !== this._currentTextContent) {\n            this._currentTextContent = textContent || '';\n            // The content observer runs outside the `NgZone` by default, which\n            // means that we need to bring the callback back in ourselves.\n            this._ngZone.run((/**\n             * @return {?}\n             */\n            () => {\n                this.updatePagination();\n                this._alignInkBarToSelectedTab();\n                this._changeDetectorRef.markForCheck();\n            }));\n        }\n    }\n    /**\n     * Updates the view whether pagination should be enabled or not.\n     *\n     * WARNING: Calling this method can be very costly in terms of performance. It should be called\n     * as infrequently as possible from outside of the Tabs component as it causes a reflow of the\n     * page.\n     * @return {?}\n     */\n    updatePagination() {\n        this._checkPaginationEnabled();\n        this._checkScrollingControls();\n        this._updateTabScrollPosition();\n    }\n    /**\n     * Tracks which element has focus; used for keyboard navigation\n     * @return {?}\n     */\n    get focusIndex() {\n        return this._keyManager ? (/** @type {?} */ (this._keyManager.activeItemIndex)) : 0;\n    }\n    /**\n     * When the focus index is set, we must manually send focus to the correct label\n     * @param {?} value\n     * @return {?}\n     */\n    set focusIndex(value) {\n        if (!this._isValidIndex(value) || this.focusIndex === value || !this._keyManager) {\n            return;\n        }\n        this._keyManager.setActiveItem(value);\n    }\n    /**\n     * Determines if an index is valid.  If the tabs are not ready yet, we assume that the user is\n     * providing a valid index and return true.\n     * @param {?} index\n     * @return {?}\n     */\n    _isValidIndex(index) {\n        if (!this._items) {\n            return true;\n        }\n        /** @type {?} */\n        const tab = this._items ? this._items.toArray()[index] : null;\n        return !!tab && !tab.disabled;\n    }\n    /**\n     * Sets focus on the HTML element for the label wrapper and scrolls it into the view if\n     * scrolling is enabled.\n     * @param {?} tabIndex\n     * @return {?}\n     */\n    _setTabFocus(tabIndex) {\n        if (this._showPaginationControls) {\n            this._scrollToLabel(tabIndex);\n        }\n        if (this._items && this._items.length) {\n            this._items.toArray()[tabIndex].focus();\n            // Do not let the browser manage scrolling to focus the element, this will be handled\n            // by using translation. In LTR, the scroll left should be 0. In RTL, the scroll width\n            // should be the full width minus the offset width.\n            /** @type {?} */\n            const containerEl = this._tabListContainer.nativeElement;\n            /** @type {?} */\n            const dir = this._getLayoutDirection();\n            if (dir == 'ltr') {\n                containerEl.scrollLeft = 0;\n            }\n            else {\n                containerEl.scrollLeft = containerEl.scrollWidth - containerEl.offsetWidth;\n            }\n        }\n    }\n    /**\n     * The layout direction of the containing app.\n     * @return {?}\n     */\n    _getLayoutDirection() {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n    /**\n     * Performs the CSS transformation on the tab list that will cause the list to scroll.\n     * @return {?}\n     */\n    _updateTabScrollPosition() {\n        if (this.disablePagination) {\n            return;\n        }\n        /** @type {?} */\n        const scrollDistance = this.scrollDistance;\n        /** @type {?} */\n        const platform = this._platform;\n        /** @type {?} */\n        const translateX = this._getLayoutDirection() === 'ltr' ? -scrollDistance : scrollDistance;\n        // Don't use `translate3d` here because we don't want to create a new layer. A new layer\n        // seems to cause flickering and overflow in Internet Explorer. For example, the ink bar\n        // and ripples will exceed the boundaries of the visible tab bar.\n        // See: https://github.com/angular/components/issues/10276\n        // We round the `transform` here, because transforms with sub-pixel precision cause some\n        // browsers to blur the content of the element.\n        this._tabList.nativeElement.style.transform = `translateX(${Math.round(translateX)}px)`;\n        // Setting the `transform` on IE will change the scroll offset of the parent, causing the\n        // position to be thrown off in some cases. We have to reset it ourselves to ensure that\n        // it doesn't get thrown off. Note that we scope it only to IE and Edge, because messing\n        // with the scroll position throws off Chrome 71+ in RTL mode (see #14689).\n        // @breaking-change 9.0.0 Remove null check for `platform` after it can no longer be undefined.\n        if (platform && (platform.TRIDENT || platform.EDGE)) {\n            this._tabListContainer.nativeElement.scrollLeft = 0;\n        }\n    }\n    /**\n     * Sets the distance in pixels that the tab header should be transformed in the X-axis.\n     * @return {?}\n     */\n    get scrollDistance() { return this._scrollDistance; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set scrollDistance(value) {\n        this._scrollTo(value);\n    }\n    /**\n     * Moves the tab list in the 'before' or 'after' direction (towards the beginning of the list or\n     * the end of the list, respectively). The distance to scroll is computed to be a third of the\n     * length of the tab list view window.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     * @param {?} direction\n     * @return {?}\n     */\n    _scrollHeader(direction) {\n        /** @type {?} */\n        const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n        // Move the scroll distance one-third the length of the tab list's viewport.\n        /** @type {?} */\n        const scrollAmount = (direction == 'before' ? -1 : 1) * viewLength / 3;\n        return this._scrollTo(this._scrollDistance + scrollAmount);\n    }\n    /**\n     * Handles click events on the pagination arrows.\n     * @param {?} direction\n     * @return {?}\n     */\n    _handlePaginatorClick(direction) {\n        this._stopInterval();\n        this._scrollHeader(direction);\n    }\n    /**\n     * Moves the tab list such that the desired tab label (marked by index) is moved into view.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     * @param {?} labelIndex\n     * @return {?}\n     */\n    _scrollToLabel(labelIndex) {\n        if (this.disablePagination) {\n            return;\n        }\n        /** @type {?} */\n        const selectedLabel = this._items ? this._items.toArray()[labelIndex] : null;\n        if (!selectedLabel) {\n            return;\n        }\n        // The view length is the visible width of the tab labels.\n        /** @type {?} */\n        const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n        const { offsetLeft, offsetWidth } = selectedLabel.elementRef.nativeElement;\n        /** @type {?} */\n        let labelBeforePos;\n        /** @type {?} */\n        let labelAfterPos;\n        if (this._getLayoutDirection() == 'ltr') {\n            labelBeforePos = offsetLeft;\n            labelAfterPos = labelBeforePos + offsetWidth;\n        }\n        else {\n            labelAfterPos = this._tabList.nativeElement.offsetWidth - offsetLeft;\n            labelBeforePos = labelAfterPos - offsetWidth;\n        }\n        /** @type {?} */\n        const beforeVisiblePos = this.scrollDistance;\n        /** @type {?} */\n        const afterVisiblePos = this.scrollDistance + viewLength;\n        if (labelBeforePos < beforeVisiblePos) {\n            // Scroll header to move label to the before direction\n            this.scrollDistance -= beforeVisiblePos - labelBeforePos + EXAGGERATED_OVERSCROLL;\n        }\n        else if (labelAfterPos > afterVisiblePos) {\n            // Scroll header to move label to the after direction\n            this.scrollDistance += labelAfterPos - afterVisiblePos + EXAGGERATED_OVERSCROLL;\n        }\n    }\n    /**\n     * Evaluate whether the pagination controls should be displayed. If the scroll width of the\n     * tab list is wider than the size of the header container, then the pagination controls should\n     * be shown.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     * @return {?}\n     */\n    _checkPaginationEnabled() {\n        if (this.disablePagination) {\n            this._showPaginationControls = false;\n        }\n        else {\n            /** @type {?} */\n            const isEnabled = this._tabList.nativeElement.scrollWidth > this._elementRef.nativeElement.offsetWidth;\n            if (!isEnabled) {\n                this.scrollDistance = 0;\n            }\n            if (isEnabled !== this._showPaginationControls) {\n                this._changeDetectorRef.markForCheck();\n            }\n            this._showPaginationControls = isEnabled;\n        }\n    }\n    /**\n     * Evaluate whether the before and after controls should be enabled or disabled.\n     * If the header is at the beginning of the list (scroll distance is equal to 0) then disable the\n     * before button. If the header is at the end of the list (scroll distance is equal to the\n     * maximum distance we can scroll), then disable the after button.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     * @return {?}\n     */\n    _checkScrollingControls() {\n        if (this.disablePagination) {\n            this._disableScrollAfter = this._disableScrollBefore = true;\n        }\n        else {\n            // Check if the pagination arrows should be activated.\n            this._disableScrollBefore = this.scrollDistance == 0;\n            this._disableScrollAfter = this.scrollDistance == this._getMaxScrollDistance();\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * Determines what is the maximum length in pixels that can be set for the scroll distance. This\n     * is equal to the difference in width between the tab list container and tab header container.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     * @return {?}\n     */\n    _getMaxScrollDistance() {\n        /** @type {?} */\n        const lengthOfTabList = this._tabList.nativeElement.scrollWidth;\n        /** @type {?} */\n        const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n        return (lengthOfTabList - viewLength) || 0;\n    }\n    /**\n     * Tells the ink-bar to align itself to the current label wrapper\n     * @return {?}\n     */\n    _alignInkBarToSelectedTab() {\n        /** @type {?} */\n        const selectedItem = this._items && this._items.length ?\n            this._items.toArray()[this.selectedIndex] : null;\n        /** @type {?} */\n        const selectedLabelWrapper = selectedItem ? selectedItem.elementRef.nativeElement : null;\n        if (selectedLabelWrapper) {\n            this._inkBar.alignToElement(selectedLabelWrapper);\n        }\n        else {\n            this._inkBar.hide();\n        }\n    }\n    /**\n     * Stops the currently-running paginator interval.\n     * @return {?}\n     */\n    _stopInterval() {\n        this._stopScrolling.next();\n    }\n    /**\n     * Handles the user pressing down on one of the paginators.\n     * Starts scrolling the header after a certain amount of time.\n     * @param {?} direction In which direction the paginator should be scrolled.\n     * @param {?=} mouseEvent\n     * @return {?}\n     */\n    _handlePaginatorPress(direction, mouseEvent) {\n        // Don't start auto scrolling for right mouse button clicks. Note that we shouldn't have to\n        // null check the `button`, but we do it so we don't break tests that use fake events.\n        if (mouseEvent && mouseEvent.button != null && mouseEvent.button !== 0) {\n            return;\n        }\n        // Avoid overlapping timers.\n        this._stopInterval();\n        // Start a timer after the delay and keep firing based on the interval.\n        timer(HEADER_SCROLL_DELAY, HEADER_SCROLL_INTERVAL)\n            // Keep the timer going until something tells it to stop or the component is destroyed.\n            .pipe(takeUntil(merge(this._stopScrolling, this._destroyed)))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => {\n            const { maxScrollDistance, distance } = this._scrollHeader(direction);\n            // Stop the timer if we've reached the start or the end.\n            if (distance === 0 || distance >= maxScrollDistance) {\n                this._stopInterval();\n            }\n        }));\n    }\n    /**\n     * Scrolls the header to a given position.\n     * @private\n     * @param {?} position Position to which to scroll.\n     * @return {?} Information on the current scroll distance and the maximum.\n     */\n    _scrollTo(position) {\n        if (this.disablePagination) {\n            return { maxScrollDistance: 0, distance: 0 };\n        }\n        /** @type {?} */\n        const maxScrollDistance = this._getMaxScrollDistance();\n        this._scrollDistance = Math.max(0, Math.min(maxScrollDistance, position));\n        // Mark that the scroll distance has changed so that after the view is checked, the CSS\n        // transformation can move the header.\n        this._scrollDistanceChanged = true;\n        this._checkScrollingControls();\n        return { maxScrollDistance, distance: this._scrollDistance };\n    }\n}\nMatPaginatedTabHeader.ɵfac = function MatPaginatedTabHeader_Factory(t) { return new (t || MatPaginatedTabHeader)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc6.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.Platform), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatPaginatedTabHeader.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatPaginatedTabHeader, inputs: { disablePagination: \"disablePagination\" } });\n/** @nocollapse */\nMatPaginatedTabHeader.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: ViewportRuler },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgZone },\n    { type: Platform },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatPaginatedTabHeader.propDecorators = {\n    disablePagination: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatPaginatedTabHeader, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc6.ViewportRuler }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.NgZone }, { type: ɵngcc7.Platform }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { disablePagination: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatPaginatedTabHeader.ngAcceptInputType_selectedIndex;\n    /** @type {?} */\n    MatPaginatedTabHeader.prototype._items;\n    /** @type {?} */\n    MatPaginatedTabHeader.prototype._inkBar;\n    /** @type {?} */\n    MatPaginatedTabHeader.prototype._tabListContainer;\n    /** @type {?} */\n    MatPaginatedTabHeader.prototype._tabList;\n    /** @type {?} */\n    MatPaginatedTabHeader.prototype._nextPaginator;\n    /** @type {?} */\n    MatPaginatedTabHeader.prototype._previousPaginator;\n    /**\n     * The distance in pixels that the tab labels should be translated to the left.\n     * @type {?}\n     * @private\n     */\n    MatPaginatedTabHeader.prototype._scrollDistance;\n    /**\n     * Whether the header should scroll to the selected index after the view has been checked.\n     * @type {?}\n     * @private\n     */\n    MatPaginatedTabHeader.prototype._selectedIndexChanged;\n    /**\n     * Emits when the component is destroyed.\n     * @type {?}\n     * @protected\n     */\n    MatPaginatedTabHeader.prototype._destroyed;\n    /**\n     * Whether the controls for pagination should be displayed\n     * @type {?}\n     */\n    MatPaginatedTabHeader.prototype._showPaginationControls;\n    /**\n     * Whether the tab list can be scrolled more towards the end of the tab label list.\n     * @type {?}\n     */\n    MatPaginatedTabHeader.prototype._disableScrollAfter;\n    /**\n     * Whether the tab list can be scrolled more towards the beginning of the tab label list.\n     * @type {?}\n     */\n    MatPaginatedTabHeader.prototype._disableScrollBefore;\n    /**\n     * The number of tab labels that are displayed on the header. When this changes, the header\n     * should re-evaluate the scroll position.\n     * @type {?}\n     * @private\n     */\n    MatPaginatedTabHeader.prototype._tabLabelCount;\n    /**\n     * Whether the scroll distance has changed and should be applied after the view is checked.\n     * @type {?}\n     * @private\n     */\n    MatPaginatedTabHeader.prototype._scrollDistanceChanged;\n    /**\n     * Used to manage focus between the tabs.\n     * @type {?}\n     * @private\n     */\n    MatPaginatedTabHeader.prototype._keyManager;\n    /**\n     * Cached text content of the header.\n     * @type {?}\n     * @private\n     */\n    MatPaginatedTabHeader.prototype._currentTextContent;\n    /**\n     * Stream that will stop the automated scrolling.\n     * @type {?}\n     * @private\n     */\n    MatPaginatedTabHeader.prototype._stopScrolling;\n    /**\n     * Whether pagination should be disabled. This can be used to avoid unnecessary\n     * layout recalculations if it's known that pagination won't be required.\n     * @type {?}\n     */\n    MatPaginatedTabHeader.prototype.disablePagination;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatPaginatedTabHeader.prototype._selectedIndex;\n    /**\n     * Event emitted when the option is selected.\n     * @type {?}\n     */\n    MatPaginatedTabHeader.prototype.selectFocusedIndex;\n    /**\n     * Event emitted when a label is focused.\n     * @type {?}\n     */\n    MatPaginatedTabHeader.prototype.indexFocused;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatPaginatedTabHeader.prototype._elementRef;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatPaginatedTabHeader.prototype._changeDetectorRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatPaginatedTabHeader.prototype._viewportRuler;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatPaginatedTabHeader.prototype._dir;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatPaginatedTabHeader.prototype._ngZone;\n    /**\n     * @deprecated \\@breaking-change 9.0.0 `_platform` and `_animationMode`\n     * parameters to become required.\n     * @type {?}\n     * @private\n     */\n    MatPaginatedTabHeader.prototype._platform;\n    /** @type {?} */\n    MatPaginatedTabHeader.prototype._animationMode;\n    /**\n     * Called when the user has selected an item via the keyboard.\n     * @abstract\n     * @protected\n     * @param {?} event\n     * @return {?}\n     */\n    MatPaginatedTabHeader.prototype._itemSelected = function (event) { };\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tabs/tab-header.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Base class with all of the `MatTabHeader` functionality.\n * \\@docs-private\n * @abstract\n */\n// tslint:disable-next-line:class-name\nclass _MatTabHeaderBase extends MatPaginatedTabHeader {\n    /**\n     * @param {?} elementRef\n     * @param {?} changeDetectorRef\n     * @param {?} viewportRuler\n     * @param {?} dir\n     * @param {?} ngZone\n     * @param {?} platform\n     * @param {?=} animationMode\n     */\n    constructor(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, \n    // @breaking-change 9.0.0 `_animationMode` parameter to be made required.\n    animationMode) {\n        super(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode);\n        this._disableRipple = false;\n    }\n    /**\n     * Whether the ripple effect is disabled or not.\n     * @return {?}\n     */\n    get disableRipple() { return this._disableRipple; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disableRipple(value) { this._disableRipple = coerceBooleanProperty(value); }\n    /**\n     * @protected\n     * @param {?} event\n     * @return {?}\n     */\n    _itemSelected(event) {\n        event.preventDefault();\n    }\n}\n_MatTabHeaderBase.ɵfac = function _MatTabHeaderBase_Factory(t) { return new (t || _MatTabHeaderBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc6.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.Platform), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\n_MatTabHeaderBase.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: _MatTabHeaderBase, inputs: { disableRipple: \"disableRipple\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\n_MatTabHeaderBase.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: ViewportRuler },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgZone },\n    { type: Platform },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n_MatTabHeaderBase.propDecorators = {\n    disableRipple: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(_MatTabHeaderBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc6.ViewportRuler }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.NgZone }, { type: ɵngcc7.Platform }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { disableRipple: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    _MatTabHeaderBase.prototype._disableRipple;\n}\n/**\n * The header of the tab group which displays a list of all the tabs in the tab group. Includes\n * an ink bar that follows the currently selected tab. When the tabs list's width exceeds the\n * width of the header container, then arrows will be displayed to allow the user to scroll\n * left and right across the header.\n * \\@docs-private\n */\nclass MatTabHeader extends _MatTabHeaderBase {\n    /**\n     * @param {?} elementRef\n     * @param {?} changeDetectorRef\n     * @param {?} viewportRuler\n     * @param {?} dir\n     * @param {?} ngZone\n     * @param {?} platform\n     * @param {?=} animationMode\n     */\n    constructor(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, \n    // @breaking-change 9.0.0 `_animationMode` parameter to be made required.\n    animationMode) {\n        super(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode);\n    }\n}\nMatTabHeader.ɵfac = function MatTabHeader_Factory(t) { return new (t || MatTabHeader)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc6.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.Platform), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatTabHeader.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatTabHeader, selectors: [[\"mat-tab-header\"]], contentQueries: function MatTabHeader_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatTabLabelWrapper, false);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._items = _t);\n    } }, viewQuery: function MatTabHeader_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵstaticViewQuery(MatInkBar, true);\n        ɵngcc0.ɵɵstaticViewQuery(_c5, true);\n        ɵngcc0.ɵɵstaticViewQuery(_c6, true);\n        ɵngcc0.ɵɵviewQuery(_c7, true);\n        ɵngcc0.ɵɵviewQuery(_c8, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._inkBar = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabListContainer = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabList = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._nextPaginator = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._previousPaginator = _t.first);\n    } }, hostAttrs: [1, \"mat-tab-header\"], hostVars: 4, hostBindings: function MatTabHeader_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-tab-header-pagination-controls-enabled\", ctx._showPaginationControls)(\"mat-tab-header-rtl\", ctx._getLayoutDirection() == \"rtl\");\n    } }, inputs: { selectedIndex: \"selectedIndex\" }, outputs: { selectFocusedIndex: \"selectFocusedIndex\", indexFocused: \"indexFocused\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c0, decls: 13, vars: 8, consts: [[\"aria-hidden\", \"true\", \"mat-ripple\", \"\", 1, \"mat-tab-header-pagination\", \"mat-tab-header-pagination-before\", \"mat-elevation-z4\", 3, \"matRippleDisabled\", \"click\", \"mousedown\", \"touchend\"], [\"previousPaginator\", \"\"], [1, \"mat-tab-header-pagination-chevron\"], [1, \"mat-tab-label-container\", 3, \"keydown\"], [\"tabListContainer\", \"\"], [\"role\", \"tablist\", 1, \"mat-tab-list\", 3, \"cdkObserveContent\"], [\"tabList\", \"\"], [1, \"mat-tab-labels\"], [\"aria-hidden\", \"true\", \"mat-ripple\", \"\", 1, \"mat-tab-header-pagination\", \"mat-tab-header-pagination-after\", \"mat-elevation-z4\", 3, \"matRippleDisabled\", \"mousedown\", \"click\", \"touchend\"], [\"nextPaginator\", \"\"]], template: function MatTabHeader_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"click\", function MatTabHeader_Template_div_click_0_listener() { return ctx._handlePaginatorClick(\"before\"); })(\"mousedown\", function MatTabHeader_Template_div_mousedown_0_listener($event) { return ctx._handlePaginatorPress(\"before\", $event); })(\"touchend\", function MatTabHeader_Template_div_touchend_0_listener() { return ctx._stopInterval(); });\n        ɵngcc0.ɵɵelement(2, \"div\", 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(3, \"div\", 3, 4);\n        ɵngcc0.ɵɵlistener(\"keydown\", function MatTabHeader_Template_div_keydown_3_listener($event) { return ctx._handleKeydown($event); });\n        ɵngcc0.ɵɵelementStart(5, \"div\", 5, 6);\n        ɵngcc0.ɵɵlistener(\"cdkObserveContent\", function MatTabHeader_Template_div_cdkObserveContent_5_listener() { return ctx._onContentChanges(); });\n        ɵngcc0.ɵɵelementStart(7, \"div\", 7);\n        ɵngcc0.ɵɵprojection(8);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(9, \"mat-ink-bar\");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(10, \"div\", 8, 9);\n        ɵngcc0.ɵɵlistener(\"mousedown\", function MatTabHeader_Template_div_mousedown_10_listener($event) { return ctx._handlePaginatorPress(\"after\", $event); })(\"click\", function MatTabHeader_Template_div_click_10_listener() { return ctx._handlePaginatorClick(\"after\"); })(\"touchend\", function MatTabHeader_Template_div_touchend_10_listener() { return ctx._stopInterval(); });\n        ɵngcc0.ɵɵelement(12, \"div\", 2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-tab-header-pagination-disabled\", ctx._disableScrollBefore);\n        ɵngcc0.ɵɵproperty(\"matRippleDisabled\", ctx._disableScrollBefore || ctx.disableRipple);\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵclassProp(\"mat-tab-header-pagination-disabled\", ctx._disableScrollAfter);\n        ɵngcc0.ɵɵproperty(\"matRippleDisabled\", ctx._disableScrollAfter || ctx.disableRipple);\n    } }, directives: [ɵngcc3.MatRipple, ɵngcc8.CdkObserveContent, MatInkBar], styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-rtl .mat-tab-header-pagination-before,.mat-tab-header-pagination-after{padding-right:4px}.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;content:\\\"\\\";height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-ink-bar{transition:none;animation:none}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}.cdk-high-contrast-active .mat-ink-bar{outline:solid 2px;height:0}.mat-tab-labels{display:flex}[mat-align-tabs=center]>.mat-tab-header .mat-tab-labels{justify-content:center}[mat-align-tabs=end]>.mat-tab-header .mat-tab-labels{justify-content:flex-end}.mat-tab-label-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}._mat-animation-noopable.mat-tab-list{transition:none;animation:none}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:none}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-label:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-label.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-label.mat-tab-disabled{opacity:.5}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-label{opacity:1}@media(max-width: 599px){.mat-tab-label{min-width:72px}}\\n\"], encapsulation: 2 });\n/** @nocollapse */\nMatTabHeader.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: ViewportRuler },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgZone },\n    { type: Platform },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatTabHeader.propDecorators = {\n    _items: [{ type: ContentChildren, args: [MatTabLabelWrapper, { descendants: false },] }],\n    _inkBar: [{ type: ViewChild, args: [MatInkBar, { static: true },] }],\n    _tabListContainer: [{ type: ViewChild, args: ['tabListContainer', { static: true },] }],\n    _tabList: [{ type: ViewChild, args: ['tabList', { static: true },] }],\n    _nextPaginator: [{ type: ViewChild, args: ['nextPaginator',] }],\n    _previousPaginator: [{ type: ViewChild, args: ['previousPaginator',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTabHeader, [{\n        type: Component,\n        args: [{\n                selector: 'mat-tab-header',\n                template: \"<div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-before mat-elevation-z4\\\"\\n     #previousPaginator\\n     aria-hidden=\\\"true\\\"\\n     mat-ripple [matRippleDisabled]=\\\"_disableScrollBefore || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollBefore\\\"\\n     (click)=\\\"_handlePaginatorClick('before')\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('before', $event)\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</div>\\n\\n<div class=\\\"mat-tab-label-container\\\" #tabListContainer (keydown)=\\\"_handleKeydown($event)\\\">\\n  <div\\n    #tabList\\n    class=\\\"mat-tab-list\\\"\\n    [class._mat-animation-noopable]=\\\"_animationMode === 'NoopAnimations'\\\"\\n    role=\\\"tablist\\\"\\n    (cdkObserveContent)=\\\"_onContentChanges()\\\">\\n    <div class=\\\"mat-tab-labels\\\">\\n      <ng-content></ng-content>\\n    </div>\\n    <mat-ink-bar></mat-ink-bar>\\n  </div>\\n</div>\\n\\n<div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-after mat-elevation-z4\\\"\\n     #nextPaginator\\n     aria-hidden=\\\"true\\\"\\n     mat-ripple [matRippleDisabled]=\\\"_disableScrollAfter || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollAfter\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('after', $event)\\\"\\n     (click)=\\\"_handlePaginatorClick('after')\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</div>\\n\",\n                inputs: ['selectedIndex'],\n                outputs: ['selectFocusedIndex', 'indexFocused'],\n                encapsulation: ViewEncapsulation.None,\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                host: {\n                    'class': 'mat-tab-header',\n                    '[class.mat-tab-header-pagination-controls-enabled]': '_showPaginationControls',\n                    '[class.mat-tab-header-rtl]': \"_getLayoutDirection() == 'rtl'\"\n                },\n                styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-rtl .mat-tab-header-pagination-before,.mat-tab-header-pagination-after{padding-right:4px}.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;content:\\\"\\\";height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-ink-bar{transition:none;animation:none}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}.cdk-high-contrast-active .mat-ink-bar{outline:solid 2px;height:0}.mat-tab-labels{display:flex}[mat-align-tabs=center]>.mat-tab-header .mat-tab-labels{justify-content:center}[mat-align-tabs=end]>.mat-tab-header .mat-tab-labels{justify-content:flex-end}.mat-tab-label-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}._mat-animation-noopable.mat-tab-list{transition:none;animation:none}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:none}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-label:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-label.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-label.mat-tab-disabled{opacity:.5}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-label{opacity:1}@media(max-width: 599px){.mat-tab-label{min-width:72px}}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc6.ViewportRuler }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.NgZone }, { type: ɵngcc7.Platform }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { _items: [{\n            type: ContentChildren,\n            args: [MatTabLabelWrapper, { descendants: false }]\n        }], _inkBar: [{\n            type: ViewChild,\n            args: [MatInkBar, { static: true }]\n        }], _tabListContainer: [{\n            type: ViewChild,\n            args: ['tabListContainer', { static: true }]\n        }], _tabList: [{\n            type: ViewChild,\n            args: ['tabList', { static: true }]\n        }], _nextPaginator: [{\n            type: ViewChild,\n            args: ['nextPaginator']\n        }], _previousPaginator: [{\n            type: ViewChild,\n            args: ['previousPaginator']\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatTabHeader.ngAcceptInputType_disableRipple;\n    /** @type {?} */\n    MatTabHeader.prototype._items;\n    /** @type {?} */\n    MatTabHeader.prototype._inkBar;\n    /** @type {?} */\n    MatTabHeader.prototype._tabListContainer;\n    /** @type {?} */\n    MatTabHeader.prototype._tabList;\n    /** @type {?} */\n    MatTabHeader.prototype._nextPaginator;\n    /** @type {?} */\n    MatTabHeader.prototype._previousPaginator;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tabs/tab-nav-bar/tab-nav-bar.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Base class with all of the `MatTabNav` functionality.\n * \\@docs-private\n * @abstract\n */\n// tslint:disable-next-line:class-name\nclass _MatTabNavBase extends MatPaginatedTabHeader {\n    /**\n     * @param {?} elementRef\n     * @param {?} dir\n     * @param {?} ngZone\n     * @param {?} changeDetectorRef\n     * @param {?} viewportRuler\n     * @param {?=} platform\n     * @param {?=} animationMode\n     */\n    constructor(elementRef, dir, ngZone, changeDetectorRef, viewportRuler, \n    /**\n     * @deprecated @breaking-change 9.0.0 `platform` parameter to become required.\n     */\n    platform, animationMode) {\n        super(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode);\n        this._disableRipple = false;\n        /**\n         * Theme color of the nav bar.\n         */\n        this.color = 'primary';\n    }\n    /**\n     * Background color of the tab nav.\n     * @return {?}\n     */\n    get backgroundColor() { return this._backgroundColor; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set backgroundColor(value) {\n        /** @type {?} */\n        const classList = this._elementRef.nativeElement.classList;\n        classList.remove(`mat-background-${this.backgroundColor}`);\n        if (value) {\n            classList.add(`mat-background-${value}`);\n        }\n        this._backgroundColor = value;\n    }\n    /**\n     * Whether the ripple effect is disabled or not.\n     * @return {?}\n     */\n    get disableRipple() { return this._disableRipple; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disableRipple(value) { this._disableRipple = coerceBooleanProperty(value); }\n    /**\n     * @protected\n     * @return {?}\n     */\n    _itemSelected() {\n        // noop\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        // We need this to run before the `changes` subscription in parent to ensure that the\n        // selectedIndex is up-to-date by the time the super class starts looking for it.\n        this._items.changes.pipe(startWith(null), takeUntil(this._destroyed)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this.updateActiveLink();\n        }));\n        super.ngAfterContentInit();\n    }\n    /**\n     * Notifies the component that the active link has been changed.\n     * \\@breaking-change 8.0.0 `element` parameter to be removed.\n     * @param {?=} _element\n     * @return {?}\n     */\n    updateActiveLink(_element) {\n        if (!this._items) {\n            return;\n        }\n        /** @type {?} */\n        const items = this._items.toArray();\n        for (let i = 0; i < items.length; i++) {\n            if (items[i].active) {\n                this.selectedIndex = i;\n                this._changeDetectorRef.markForCheck();\n                return;\n            }\n        }\n        // The ink bar should hide itself if no items are active.\n        this.selectedIndex = -1;\n        this._inkBar.hide();\n    }\n}\n_MatTabNavBase.ɵfac = function _MatTabNavBase_Factory(t) { return new (t || _MatTabNavBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc6.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.Platform, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\n_MatTabNavBase.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: _MatTabNavBase, inputs: { color: \"color\", backgroundColor: \"backgroundColor\", disableRipple: \"disableRipple\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\n_MatTabNavBase.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgZone },\n    { type: ChangeDetectorRef },\n    { type: ViewportRuler },\n    { type: Platform, decorators: [{ type: Optional }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n_MatTabNavBase.propDecorators = {\n    backgroundColor: [{ type: Input }],\n    disableRipple: [{ type: Input }],\n    color: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(_MatTabNavBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.NgZone }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc6.ViewportRuler }, { type: ɵngcc7.Platform, decorators: [{\n                type: Optional\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { color: [{\n            type: Input\n        }], backgroundColor: [{\n            type: Input\n        }], disableRipple: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /**\n     * Query list of all tab links of the tab navigation.\n     * @type {?}\n     */\n    _MatTabNavBase.prototype._items;\n    /**\n     * @type {?}\n     * @private\n     */\n    _MatTabNavBase.prototype._backgroundColor;\n    /**\n     * @type {?}\n     * @private\n     */\n    _MatTabNavBase.prototype._disableRipple;\n    /**\n     * Theme color of the nav bar.\n     * @type {?}\n     */\n    _MatTabNavBase.prototype.color;\n}\n/**\n * Navigation component matching the styles of the tab group header.\n * Provides anchored navigation with animated ink bar.\n */\nclass MatTabNav extends _MatTabNavBase {\n    /**\n     * @param {?} elementRef\n     * @param {?} dir\n     * @param {?} ngZone\n     * @param {?} changeDetectorRef\n     * @param {?} viewportRuler\n     * @param {?=} platform\n     * @param {?=} animationMode\n     */\n    constructor(elementRef, dir, ngZone, changeDetectorRef, viewportRuler, \n    /**\n     * @deprecated @breaking-change 9.0.0 `platform` parameter to become required.\n     */\n    platform, animationMode) {\n        super(elementRef, dir, ngZone, changeDetectorRef, viewportRuler, platform, animationMode);\n    }\n}\nMatTabNav.ɵfac = function MatTabNav_Factory(t) { return new (t || MatTabNav)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc6.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.Platform, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatTabNav.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatTabNav, selectors: [[\"\", \"mat-tab-nav-bar\", \"\"]], contentQueries: function MatTabNav_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatTabLink, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._items = _t);\n    } }, viewQuery: function MatTabNav_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵstaticViewQuery(MatInkBar, true);\n        ɵngcc0.ɵɵstaticViewQuery(_c5, true);\n        ɵngcc0.ɵɵstaticViewQuery(_c6, true);\n        ɵngcc0.ɵɵviewQuery(_c7, true);\n        ɵngcc0.ɵɵviewQuery(_c8, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._inkBar = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabListContainer = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabList = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._nextPaginator = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._previousPaginator = _t.first);\n    } }, hostAttrs: [1, \"mat-tab-nav-bar\", \"mat-tab-header\"], hostVars: 10, hostBindings: function MatTabNav_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-tab-header-pagination-controls-enabled\", ctx._showPaginationControls)(\"mat-tab-header-rtl\", ctx._getLayoutDirection() == \"rtl\")(\"mat-primary\", ctx.color !== \"warn\" && ctx.color !== \"accent\")(\"mat-accent\", ctx.color === \"accent\")(\"mat-warn\", ctx.color === \"warn\");\n    } }, inputs: { color: \"color\" }, exportAs: [\"matTabNavBar\", \"matTabNav\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], attrs: _c9, ngContentSelectors: _c0, decls: 13, vars: 8, consts: [[\"aria-hidden\", \"true\", \"mat-ripple\", \"\", 1, \"mat-tab-header-pagination\", \"mat-tab-header-pagination-before\", \"mat-elevation-z4\", 3, \"matRippleDisabled\", \"click\", \"mousedown\", \"touchend\"], [\"previousPaginator\", \"\"], [1, \"mat-tab-header-pagination-chevron\"], [1, \"mat-tab-link-container\", 3, \"keydown\"], [\"tabListContainer\", \"\"], [1, \"mat-tab-list\", 3, \"cdkObserveContent\"], [\"tabList\", \"\"], [1, \"mat-tab-links\"], [\"aria-hidden\", \"true\", \"mat-ripple\", \"\", 1, \"mat-tab-header-pagination\", \"mat-tab-header-pagination-after\", \"mat-elevation-z4\", 3, \"matRippleDisabled\", \"mousedown\", \"click\", \"touchend\"], [\"nextPaginator\", \"\"]], template: function MatTabNav_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"click\", function MatTabNav_Template_div_click_0_listener() { return ctx._handlePaginatorClick(\"before\"); })(\"mousedown\", function MatTabNav_Template_div_mousedown_0_listener($event) { return ctx._handlePaginatorPress(\"before\", $event); })(\"touchend\", function MatTabNav_Template_div_touchend_0_listener() { return ctx._stopInterval(); });\n        ɵngcc0.ɵɵelement(2, \"div\", 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(3, \"div\", 3, 4);\n        ɵngcc0.ɵɵlistener(\"keydown\", function MatTabNav_Template_div_keydown_3_listener($event) { return ctx._handleKeydown($event); });\n        ɵngcc0.ɵɵelementStart(5, \"div\", 5, 6);\n        ɵngcc0.ɵɵlistener(\"cdkObserveContent\", function MatTabNav_Template_div_cdkObserveContent_5_listener() { return ctx._onContentChanges(); });\n        ɵngcc0.ɵɵelementStart(7, \"div\", 7);\n        ɵngcc0.ɵɵprojection(8);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(9, \"mat-ink-bar\");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(10, \"div\", 8, 9);\n        ɵngcc0.ɵɵlistener(\"mousedown\", function MatTabNav_Template_div_mousedown_10_listener($event) { return ctx._handlePaginatorPress(\"after\", $event); })(\"click\", function MatTabNav_Template_div_click_10_listener() { return ctx._handlePaginatorClick(\"after\"); })(\"touchend\", function MatTabNav_Template_div_touchend_10_listener() { return ctx._stopInterval(); });\n        ɵngcc0.ɵɵelement(12, \"div\", 2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-tab-header-pagination-disabled\", ctx._disableScrollBefore);\n        ɵngcc0.ɵɵproperty(\"matRippleDisabled\", ctx._disableScrollBefore || ctx.disableRipple);\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵclassProp(\"mat-tab-header-pagination-disabled\", ctx._disableScrollAfter);\n        ɵngcc0.ɵɵproperty(\"matRippleDisabled\", ctx._disableScrollAfter || ctx.disableRipple);\n    } }, directives: [ɵngcc3.MatRipple, ɵngcc8.CdkObserveContent, MatInkBar], styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-rtl .mat-tab-header-pagination-before,.mat-tab-header-pagination-after{padding-right:4px}.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;content:\\\"\\\";height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-tab-links{display:flex}[mat-align-tabs=center]>.mat-tab-link-container .mat-tab-links{justify-content:center}[mat-align-tabs=end]>.mat-tab-link-container .mat-tab-links{justify-content:flex-end}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-ink-bar{transition:none;animation:none}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}.cdk-high-contrast-active .mat-ink-bar{outline:solid 2px;height:0}.mat-tab-link-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}.mat-tab-link{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;vertical-align:top;text-decoration:none;position:relative;overflow:hidden;-webkit-tap-highlight-color:transparent}.mat-tab-link:focus{outline:none}.mat-tab-link:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-link:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-link.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-link.mat-tab-disabled{opacity:.5}.mat-tab-link .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-link{opacity:1}[mat-stretch-tabs] .mat-tab-link{flex-basis:0;flex-grow:1}.mat-tab-link.mat-tab-disabled{pointer-events:none}@media(max-width: 599px){.mat-tab-link{min-width:72px}}\\n\"], encapsulation: 2 });\n/** @nocollapse */\nMatTabNav.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgZone },\n    { type: ChangeDetectorRef },\n    { type: ViewportRuler },\n    { type: Platform, decorators: [{ type: Optional }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatTabNav.propDecorators = {\n    _items: [{ type: ContentChildren, args: [forwardRef((/**\n                 * @return {?}\n                 */\n                () => MatTabLink)), { descendants: true },] }],\n    _inkBar: [{ type: ViewChild, args: [MatInkBar, { static: true },] }],\n    _tabListContainer: [{ type: ViewChild, args: ['tabListContainer', { static: true },] }],\n    _tabList: [{ type: ViewChild, args: ['tabList', { static: true },] }],\n    _nextPaginator: [{ type: ViewChild, args: ['nextPaginator',] }],\n    _previousPaginator: [{ type: ViewChild, args: ['previousPaginator',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTabNav, [{\n        type: Component,\n        args: [{\n                selector: '[mat-tab-nav-bar]',\n                exportAs: 'matTabNavBar, matTabNav',\n                inputs: ['color'],\n                template: \"<div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-before mat-elevation-z4\\\"\\n     #previousPaginator\\n     aria-hidden=\\\"true\\\"\\n     mat-ripple [matRippleDisabled]=\\\"_disableScrollBefore || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollBefore\\\"\\n     (click)=\\\"_handlePaginatorClick('before')\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('before', $event)\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</div>\\n\\n<div class=\\\"mat-tab-link-container\\\" #tabListContainer (keydown)=\\\"_handleKeydown($event)\\\">\\n  <div\\n    class=\\\"mat-tab-list\\\"\\n    [class._mat-animation-noopable]=\\\"_animationMode === 'NoopAnimations'\\\"\\n    #tabList\\n    (cdkObserveContent)=\\\"_onContentChanges()\\\">\\n    <div class=\\\"mat-tab-links\\\">\\n      <ng-content></ng-content>\\n    </div>\\n    <mat-ink-bar></mat-ink-bar>\\n  </div>\\n</div>\\n\\n<div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-after mat-elevation-z4\\\"\\n     #nextPaginator\\n     aria-hidden=\\\"true\\\"\\n     mat-ripple [matRippleDisabled]=\\\"_disableScrollAfter || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollAfter\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('after', $event)\\\"\\n     (click)=\\\"_handlePaginatorClick('after')\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</div>\\n\",\n                host: {\n                    'class': 'mat-tab-nav-bar mat-tab-header',\n                    '[class.mat-tab-header-pagination-controls-enabled]': '_showPaginationControls',\n                    '[class.mat-tab-header-rtl]': \"_getLayoutDirection() == 'rtl'\",\n                    '[class.mat-primary]': 'color !== \"warn\" && color !== \"accent\"',\n                    '[class.mat-accent]': 'color === \"accent\"',\n                    '[class.mat-warn]': 'color === \"warn\"'\n                },\n                encapsulation: ViewEncapsulation.None,\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-rtl .mat-tab-header-pagination-before,.mat-tab-header-pagination-after{padding-right:4px}.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;content:\\\"\\\";height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-tab-links{display:flex}[mat-align-tabs=center]>.mat-tab-link-container .mat-tab-links{justify-content:center}[mat-align-tabs=end]>.mat-tab-link-container .mat-tab-links{justify-content:flex-end}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-ink-bar{transition:none;animation:none}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}.cdk-high-contrast-active .mat-ink-bar{outline:solid 2px;height:0}.mat-tab-link-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}.mat-tab-link{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;vertical-align:top;text-decoration:none;position:relative;overflow:hidden;-webkit-tap-highlight-color:transparent}.mat-tab-link:focus{outline:none}.mat-tab-link:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-link:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-link.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-link.mat-tab-disabled{opacity:.5}.mat-tab-link .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-link{opacity:1}[mat-stretch-tabs] .mat-tab-link{flex-basis:0;flex-grow:1}.mat-tab-link.mat-tab-disabled{pointer-events:none}@media(max-width: 599px){.mat-tab-link{min-width:72px}}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.NgZone }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc6.ViewportRuler }, { type: ɵngcc7.Platform, decorators: [{\n                type: Optional\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { _items: [{\n            type: ContentChildren,\n            args: [forwardRef(( /**\n                             * @return {?}\n                             */() => MatTabLink)), { descendants: true }]\n        }], _inkBar: [{\n            type: ViewChild,\n            args: [MatInkBar, { static: true }]\n        }], _tabListContainer: [{\n            type: ViewChild,\n            args: ['tabListContainer', { static: true }]\n        }], _tabList: [{\n            type: ViewChild,\n            args: ['tabList', { static: true }]\n        }], _nextPaginator: [{\n            type: ViewChild,\n            args: ['nextPaginator']\n        }], _previousPaginator: [{\n            type: ViewChild,\n            args: ['previousPaginator']\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatTabNav.ngAcceptInputType_disableRipple;\n    /** @type {?} */\n    MatTabNav.prototype._items;\n    /** @type {?} */\n    MatTabNav.prototype._inkBar;\n    /** @type {?} */\n    MatTabNav.prototype._tabListContainer;\n    /** @type {?} */\n    MatTabNav.prototype._tabList;\n    /** @type {?} */\n    MatTabNav.prototype._nextPaginator;\n    /** @type {?} */\n    MatTabNav.prototype._previousPaginator;\n}\n// Boilerplate for applying mixins to MatTabLink.\nclass MatTabLinkMixinBase {\n}\n/** @type {?} */\nconst _MatTabLinkMixinBase = mixinTabIndex(mixinDisableRipple(mixinDisabled(MatTabLinkMixinBase)));\n/**\n * Base class with all of the `MatTabLink` functionality.\n */\n// tslint:disable-next-line:class-name\nclass _MatTabLinkBase extends _MatTabLinkMixinBase {\n    /**\n     * @param {?} _tabNavBar\n     * @param {?} elementRef\n     * @param {?} globalRippleOptions\n     * @param {?} tabIndex\n     * @param {?} _focusMonitor\n     * @param {?=} animationMode\n     */\n    constructor(_tabNavBar, elementRef, globalRippleOptions, tabIndex, _focusMonitor, animationMode) {\n        super();\n        this._tabNavBar = _tabNavBar;\n        this.elementRef = elementRef;\n        this._focusMonitor = _focusMonitor;\n        /**\n         * Whether the tab link is active or not.\n         */\n        this._isActive = false;\n        this.rippleConfig = globalRippleOptions || {};\n        this.tabIndex = parseInt(tabIndex) || 0;\n        if (animationMode === 'NoopAnimations') {\n            this.rippleConfig.animation = { enterDuration: 0, exitDuration: 0 };\n        }\n        _focusMonitor.monitor(elementRef);\n    }\n    /**\n     * Whether the link is active.\n     * @return {?}\n     */\n    get active() { return this._isActive; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set active(value) {\n        if (value !== this._isActive) {\n            this._isActive = value;\n            this._tabNavBar.updateActiveLink(this.elementRef);\n        }\n    }\n    /**\n     * Whether ripples are disabled on interaction.\n     * \\@docs-private\n     * @return {?}\n     */\n    get rippleDisabled() {\n        return this.disabled || this.disableRipple || this._tabNavBar.disableRipple ||\n            !!this.rippleConfig.disabled;\n    }\n    /**\n     * @return {?}\n     */\n    focus() {\n        this.elementRef.nativeElement.focus();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this.elementRef);\n    }\n}\n_MatTabLinkBase.ɵfac = function _MatTabLinkBase_Factory(t) { return new (t || _MatTabLinkBase)(ɵngcc0.ɵɵdirectiveInject(_MatTabNavBase), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(MAT_RIPPLE_GLOBAL_OPTIONS, 8), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\n_MatTabLinkBase.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: _MatTabLinkBase, inputs: { active: \"active\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\n_MatTabLinkBase.ctorParameters = () => [\n    { type: _MatTabNavBase },\n    { type: ElementRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_RIPPLE_GLOBAL_OPTIONS,] }] },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: FocusMonitor },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n_MatTabLinkBase.propDecorators = {\n    active: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(_MatTabLinkBase, [{\n        type: Directive\n    }], function () { return [{ type: _MatTabNavBase }, { type: ɵngcc0.ElementRef }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n            }] }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }, { type: ɵngcc4.FocusMonitor }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { active: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    _MatTabLinkBase.ngAcceptInputType_disabled;\n    /** @type {?} */\n    _MatTabLinkBase.ngAcceptInputType_disableRipple;\n    /**\n     * Whether the tab link is active or not.\n     * @type {?}\n     * @protected\n     */\n    _MatTabLinkBase.prototype._isActive;\n    /**\n     * Ripple configuration for ripples that are launched on pointer down. The ripple config\n     * is set to the global ripple options since we don't have any configurable options for\n     * the tab link ripples.\n     * \\@docs-private\n     * @type {?}\n     */\n    _MatTabLinkBase.prototype.rippleConfig;\n    /**\n     * @type {?}\n     * @private\n     */\n    _MatTabLinkBase.prototype._tabNavBar;\n    /** @type {?} */\n    _MatTabLinkBase.prototype.elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    _MatTabLinkBase.prototype._focusMonitor;\n}\n/**\n * Link inside of a `mat-tab-nav-bar`.\n */\nclass MatTabLink extends _MatTabLinkBase {\n    /**\n     * @param {?} tabNavBar\n     * @param {?} elementRef\n     * @param {?} ngZone\n     * @param {?} platform\n     * @param {?} globalRippleOptions\n     * @param {?} tabIndex\n     * @param {?} focusMonitor\n     * @param {?=} animationMode\n     */\n    constructor(tabNavBar, elementRef, ngZone, platform, globalRippleOptions, tabIndex, focusMonitor, animationMode) {\n        super(tabNavBar, elementRef, globalRippleOptions, tabIndex, focusMonitor, animationMode);\n        this._tabLinkRipple = new RippleRenderer(this, ngZone, elementRef, platform);\n        this._tabLinkRipple.setupTriggerEvents(elementRef.nativeElement);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        this._tabLinkRipple._removeTriggerEvents();\n    }\n}\nMatTabLink.ɵfac = function MatTabLink_Factory(t) { return new (t || MatTabLink)(ɵngcc0.ɵɵdirectiveInject(MatTabNav), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.Platform), ɵngcc0.ɵɵdirectiveInject(MAT_RIPPLE_GLOBAL_OPTIONS, 8), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatTabLink.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatTabLink, selectors: [[\"\", \"mat-tab-link\", \"\"], [\"\", \"matTabLink\", \"\"]], hostAttrs: [1, \"mat-tab-link\", \"mat-focus-indicator\"], hostVars: 7, hostBindings: function MatTabLink_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-current\", ctx.active ? \"page\" : null)(\"aria-disabled\", ctx.disabled)(\"tabIndex\", ctx.tabIndex);\n        ɵngcc0.ɵɵclassProp(\"mat-tab-disabled\", ctx.disabled)(\"mat-tab-label-active\", ctx.active);\n    } }, inputs: { disabled: \"disabled\", disableRipple: \"disableRipple\", tabIndex: \"tabIndex\" }, exportAs: [\"matTabLink\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nMatTabLink.ctorParameters = () => [\n    { type: MatTabNav },\n    { type: ElementRef },\n    { type: NgZone },\n    { type: Platform },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_RIPPLE_GLOBAL_OPTIONS,] }] },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: FocusMonitor },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTabLink, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-tab-link], [matTabLink]',\n                exportAs: 'matTabLink',\n                inputs: ['disabled', 'disableRipple', 'tabIndex'],\n                host: {\n                    'class': 'mat-tab-link mat-focus-indicator',\n                    '[attr.aria-current]': 'active ? \"page\" : null',\n                    '[attr.aria-disabled]': 'disabled',\n                    '[attr.tabIndex]': 'tabIndex',\n                    '[class.mat-tab-disabled]': 'disabled',\n                    '[class.mat-tab-label-active]': 'active'\n                }\n            }]\n    }], function () { return [{ type: MatTabNav }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }, { type: ɵngcc7.Platform }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n            }] }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }, { type: ɵngcc4.FocusMonitor }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, null); })();\nif (false) {\n    /**\n     * Reference to the RippleRenderer for the tab-link.\n     * @type {?}\n     * @private\n     */\n    MatTabLink.prototype._tabLinkRipple;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tabs/tabs-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatTabsModule {\n}\nMatTabsModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatTabsModule });\nMatTabsModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatTabsModule_Factory(t) { return new (t || MatTabsModule)(); }, imports: [[\n            CommonModule,\n            MatCommonModule,\n            PortalModule,\n            MatRippleModule,\n            ObserversModule,\n            A11yModule,\n        ],\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatTabsModule, { declarations: function () { return [MatTabGroup,\n        MatTabLabel,\n        MatTab,\n        MatInkBar,\n        MatTabLabelWrapper,\n        MatTabNav,\n        MatTabLink,\n        MatTabBody,\n        MatTabBodyPortal,\n        MatTabHeader,\n        MatTabContent]; }, imports: function () { return [CommonModule,\n        MatCommonModule,\n        PortalModule,\n        MatRippleModule,\n        ObserversModule,\n        A11yModule]; }, exports: function () { return [MatCommonModule,\n        MatTabGroup,\n        MatTabLabel,\n        MatTab,\n        MatTabNav,\n        MatTabLink,\n        MatTabContent]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTabsModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    MatCommonModule,\n                    PortalModule,\n                    MatRippleModule,\n                    ObserversModule,\n                    A11yModule,\n                ],\n                // Don't export all components because some are only to be used internally.\n                exports: [\n                    MatCommonModule,\n                    MatTabGroup,\n                    MatTabLabel,\n                    MatTab,\n                    MatTabNav,\n                    MatTabLink,\n                    MatTabContent,\n                ],\n                declarations: [\n                    MatTabGroup,\n                    MatTabLabel,\n                    MatTab,\n                    MatInkBar,\n                    MatTabLabelWrapper,\n                    MatTabNav,\n                    MatTabLink,\n                    MatTabBody,\n                    MatTabBodyPortal,\n                    MatTabHeader,\n                    MatTabContent,\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tabs/tab-nav-bar/index.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tabs/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_TABS_CONFIG, MAT_TAB_GROUP, MatInkBar, MatTab, MatTabBody, MatTabBodyPortal, MatTabChangeEvent, MatTabContent, MatTabGroup, MatTabHeader, MatTabLabel, MatTabLabelWrapper, MatTabLink, MatTabNav, MatTabsModule, _MAT_INK_BAR_POSITIONER, _MatTabBodyBase, _MatTabGroupBase, _MatTabHeaderBase, _MatTabLinkBase, _MatTabNavBase, matTabsAnimations, _MAT_INK_BAR_POSITIONER_FACTORY as ɵangular_material_src_material_tabs_tabs_a, MatPaginatedTabHeader as ɵangular_material_src_material_tabs_tabs_b };\n\n//# sourceMappingURL=tabs.js.map","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-credentials',\n  templateUrl: './credentials.component.html',\n  styleUrls: ['./credentials.component.scss']\n})\nexport class CredentialsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"background\">\n  <h2>Scheduler</h2>\n  <mat-card>\n    <nav mat-tab-nav-bar color=\"accent\">\n      <a mat-tab-link\n         routerLinkActive\n         #rla=\"routerLinkActive\"\n         [active]=\"rla.isActive\"\n         [routerLink]=\"['/login']\">ENTRAR</a>\n      <a mat-tab-link\n         routerLinkActive\n         #rlaSignup=\"routerLinkActive\"\n         [active]=\"rlaSignup.isActive\"\n         [routerLink]=\"['/signup']\">QUERO ME CADASTRAR</a>\n    </nav>\n    <mat-card-content>\n      <router-outlet></router-outlet>\n    </mat-card-content>\n  </mat-card>\n</div>\n","import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\n\nimport {LoginComponent} from './login.component';\nimport {SignupComponent} from \"./signup/signup.component\";\nimport {CredentialsComponent} from \"./credentials/credentials.component\";\n\nconst routes: Routes = [{\n  path: '',\n  component: CredentialsComponent,\n  children: [\n    {path: 'login', component: LoginComponent},\n    {path: 'signup', component: SignupComponent},\n    {path: '', pathMatch: 'full', redirectTo: 'login'}\n  ]\n}];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class LoginRoutingModule {\n}\n","import {Component, OnInit} from '@angular/core';\nimport {AuthService} from \"../auth/auth.service\";\nimport {AbstractControl, FormBuilder, FormGroup, Validators} from \"@angular/forms\";\nimport {MatButtonToggle} from \"@angular/material/button-toggle\";\nimport {MatSnackBar} from \"@angular/material/snack-bar\";\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  loginFormGroup: FormGroup;\n  togglePasswordIcon: 'visibility_off' | 'visibility' = 'visibility';\n  passwordType: 'password' | 'text' = 'password';\n  isLoading = false;\n\n  get email(): AbstractControl {\n    return this.loginFormGroup.get('username');\n  }\n\n  get password(): AbstractControl {\n    return this.loginFormGroup.get('password');\n  }\n\n  constructor(\n    private snackBar: MatSnackBar,\n    private auth: AuthService,\n    private fb: FormBuilder\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.buildForm();\n  }\n\n  togglePasswordVisibility(buttonToggle: MatButtonToggle) {\n    this.passwordType = buttonToggle.checked ? 'text' : 'password';\n    this.togglePasswordIcon = buttonToggle.checked ? 'visibility' : 'visibility_off';\n  }\n\n  submit() {\n    if (this.loginFormGroup.valid) {\n      this.isLoading = true;\n      const {username, password} = this.loginFormGroup.getRawValue();\n      this.auth.login(username, password)\n        .toPromise()\n        .then(_ => this.auth.redirectAfterLogin())\n        .catch(error => {\n          this.snackBar\n            .open('Não foi possível ingressar com as credenciais informadas, verifique o dados e tente novamente!',\n              null, {duration: 4000});\n        })\n        .finally(() => this.isLoading = false);\n    }\n  }\n\n  private buildForm() {\n    this.loginFormGroup = this.fb.group({\n      username: this.fb.control('', [Validators.email, Validators.required]),\n      password: this.fb.control('', [Validators.required])\n    })\n  }\n}\n","<form [formGroup]=\"loginFormGroup\" (ngSubmit)=\"submit()\">\n  <ng-template [ngIf]=\"isLoading\">\n    <mat-progress-bar mode='query'></mat-progress-bar>\n  </ng-template>\n  <div>\n    <mat-form-field>\n      <mat-label>E-mail</mat-label>\n      <mat-icon matPrefix>person</mat-icon>\n      <input formControlName=\"username\" matInput placeholder=\"meuemail@example.com\"/>\n      <mat-error *ngIf=\"email.invalid\">Utilize um email válido.</mat-error>\n    </mat-form-field>\n  </div>\n  <div>\n    <mat-form-field>\n      <mat-label>Senha</mat-label>\n      <mat-icon matPrefix>lock</mat-icon>\n      <input [type]='passwordType' formControlName=\"password\" matInput placeholder=\"senhasupersecreta\"/>\n      <mat-button-toggle\n        (click)=\"togglePasswordVisibility(buttonToggle)\"\n        matSuffix #buttonToggle=\"matButtonToggle\">\n        <mat-icon>{{togglePasswordIcon}}</mat-icon>\n      </mat-button-toggle>\n    </mat-form-field>\n  </div>\n  <button class=\"signin\" mat-raised-button color=\"primary\">Entrar</button>\n</form>\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {LoginRoutingModule} from './login-routing.module';\nimport {LoginComponent} from './login.component';\nimport {MatTabsModule} from \"@angular/material/tabs\";\nimport {MatCardModule} from \"@angular/material/card\";\nimport {SignupModule} from \"./signup/signup.module\";\nimport {CredentialsComponent} from './credentials/credentials.component';\nimport {MatFormFieldModule} from \"@angular/material/form-field\";\nimport {MatInputModule} from \"@angular/material/input\";\nimport {ReactiveFormsModule} from \"@angular/forms\";\nimport {MatIconModule} from \"@angular/material/icon\";\nimport {MatButtonToggleModule} from \"@angular/material/button-toggle\";\nimport {MatButtonModule} from \"@angular/material/button\";\nimport {MatProgressBarModule} from \"@angular/material/progress-bar\";\nimport {MatSnackBarModule} from \"@angular/material/snack-bar\";\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    SignupModule,\n    LoginRoutingModule,\n    MatTabsModule,\n    MatCardModule,\n    MatFormFieldModule,\n    MatInputModule,\n    ReactiveFormsModule,\n    MatIconModule,\n    MatButtonToggleModule,\n    MatButtonModule,\n    MatProgressBarModule,\n    MatSnackBarModule,\n  ],\n  declarations: [LoginComponent, CredentialsComponent]\n})\nexport class LoginModule {\n}\n","import {Component, OnInit} from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from \"@angular/forms\";\nimport {MatButtonToggle} from \"@angular/material/button-toggle\";\nimport {MatSnackBar} from \"@angular/material/snack-bar\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {AuthService} from \"../../auth/auth.service\";\nimport {switchMap} from \"rxjs/operators\";\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.scss']\n})\nexport class SignupComponent implements OnInit {\n  customerFormGroup: FormGroup;\n  togglePasswordIcon: 'visibility_off' | 'visibility' = 'visibility';\n  passwordType: 'password' | 'text' = 'password';\n  isLoading = false;\n\n  constructor(\n    private fb: FormBuilder,\n    private snackBar: MatSnackBar,\n    private http: HttpClient,\n    private auth: AuthService\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.buildForm();\n  }\n\n  buildForm() {\n    this.customerFormGroup = this.fb.group({\n      name: this.fb.control('', [Validators.required]),\n      email: this.fb.control('', [Validators.required, Validators.email]),\n      healthInsurance: this.fb.control('', [Validators.required]),\n      password: this.fb.control('', [Validators.required, Validators.pattern(/.{5,}/)])\n    })\n  }\n\n  createUserAccount() {\n    if (this.customerFormGroup.invalid) {\n      this.snackBar.open('Verifique se o formulario esta preenchido corretamente e tente novamente!', null, {\n        duration: 10000\n      })\n    }\n\n    if (this.customerFormGroup.valid) {\n      this.isLoading = true;\n      const customer = this.customerFormGroup.getRawValue();\n      this.http.post('http://localhost:8080/signup', customer)\n        .pipe(\n          switchMap(_ => {\n            return this.auth.login(customer.email, customer.password);\n          })\n        )\n        .toPromise()\n        .then(_ => this.auth.redirectAfterLogin())\n        .finally(() => this.isLoading = false);\n    }\n  }\n\n  togglePasswordVisibility(buttonToggle: MatButtonToggle) {\n    this.passwordType = buttonToggle.checked ? 'text' : 'password';\n    this.togglePasswordIcon = buttonToggle.checked ? 'visibility_off' : 'visibility';\n    console.log('PASSWORD VISIBILITY ', buttonToggle.checked);\n  }\n}\n","<form [formGroup]=\"customerFormGroup\" (ngSubmit)=\"createUserAccount()\">\n  <ng-template>\n    <mat-progress-bar color=\"primary\" mode=\"indeterminate\"></mat-progress-bar>\n  </ng-template>\n  <div>\n    <mat-form-field>\n      <mat-label>Nome</mat-label>\n      <input matInput formControlName=\"name\" type=\"text\">\n      <mat-hint>Informe seu nome completo.</mat-hint>\n    </mat-form-field>\n  </div>\n  <div>\n    <mat-form-field>\n      <mat-label>Plano de Saúde</mat-label>\n      <input matInput formControlName=\"healthInsurance\" type=\"text\">\n      <mat-hint>Informe seu plano de saúde.</mat-hint>\n    </mat-form-field>\n  </div>\n  <div>\n    <mat-form-field>\n      <mat-label>E-mail</mat-label>\n      <input matInput formControlName=\"email\" type=\"email\">\n      <mat-hint>Informe um e-mail ativo, para receber notificações.</mat-hint>\n    </mat-form-field>\n  </div>\n  <div>\n    <mat-form-field>\n      <mat-label>Senha</mat-label>\n      <input [type]='passwordType' formControlName=\"password\" matInput placeholder=\"senhasupersecreta\"/>\n      <mat-button-toggle\n        (click)=\"togglePasswordVisibility(buttonToggle)\"\n        matSuffix #buttonToggle=\"matButtonToggle\">\n        <mat-icon>{{togglePasswordIcon}}</mat-icon>\n      </mat-button-toggle>\n      <mat-hint>Informe uma senha com pelo menos 5 caracteres.</mat-hint>\n    </mat-form-field>\n  </div>\n  <button type=\"submit\" mat-raised-button color=\"primary\">Criar conta</button>\n</form>\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {SignupComponent} from \"./signup.component\";\nimport {MatFormFieldModule} from \"@angular/material/form-field\";\nimport {MatButtonToggleModule} from \"@angular/material/button-toggle\";\nimport {MatInputModule} from \"@angular/material/input\";\nimport {ReactiveFormsModule} from \"@angular/forms\";\nimport {MatIconModule} from \"@angular/material/icon\";\nimport {MatButtonModule} from \"@angular/material/button\";\nimport {MatProgressBarModule} from \"@angular/material/progress-bar\";\nimport {MatSnackBarModule} from \"@angular/material/snack-bar\";\n\n\n@NgModule({\n  declarations: [SignupComponent],\n  exports: [SignupComponent],\n  imports: [\n    CommonModule,\n    MatFormFieldModule,\n    MatButtonToggleModule,\n    MatInputModule,\n    ReactiveFormsModule,\n    MatIconModule,\n    MatButtonToggleModule,\n    MatButtonModule,\n    MatProgressBarModule,\n    MatSnackBarModule\n  ]\n})\nexport class SignupModule {\n}\n"]}
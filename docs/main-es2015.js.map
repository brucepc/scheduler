{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/auth/auth-client-interceptor.ts","./src/app/auth/auth-token-interceptor.ts","./src/app/auth/auth.guard.ts","./src/app/auth/auth.module.ts","./src/app/auth/auth.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {AuthGuard} from \"./auth/auth.guard\";\n\n\nconst routes: Routes = [\n  {\n    path: 'scheduler',\n    canActivate: [AuthGuard],\n    loadChildren: () => import('./scheduler/scheduler.module').then(m => m.SchedulerModule)\n  },\n  {\n    path: '',\n    loadChildren: () => import('./login/login.module').then(m => m.LoginModule)\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {\n}\n","import {Component} from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html'\n})\nexport class AppComponent {\n  constructor() {\n  }\n\n\n}\n","<router-outlet></router-outlet>\n","import {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\n\nimport {AppRoutingModule} from './app-routing.module';\nimport {AppComponent} from './app.component';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {HttpClientModule} from \"@angular/common/http\";\nimport {JwtModule} from \"@auth0/angular-jwt\";\nimport {AuthModule} from \"./auth/auth.module\";\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    JwtModule.forRoot({\n      config: {\n        tokenGetter: _ => sessionStorage.getItem('access_token'),\n        blacklistedRoutes: [\n          '/oauth/token'\n        ]\n      }\n    }),\n    AuthModule\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","import {Injectable} from \"@angular/core\";\nimport {HttpEvent, HttpHandler, HttpInterceptor, HttpRequest} from \"@angular/common/http\";\nimport {Observable} from \"rxjs\";\nimport {environment} from \"../../environments/environment\";\n\n@Injectable()\nexport class AuthClientInterceptor implements HttpInterceptor {\n  private authConfig = environment.auth;\n\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    const request = req.clone({\n      headers: req.headers.set('Authorization', this.getBasicAuthToken())\n    });\n    return next.handle(request);\n  }\n\n  private getBasicAuthToken(): string {\n    const basicToken = btoa(`${this.authConfig.clientId}:${this.authConfig.clientSecret}`);\n    return `Basic ${basicToken}`;\n  }\n}\n","import {HttpEvent, HttpHandler, HttpInterceptor, HttpRequest} from \"@angular/common/http\";\nimport {Observable} from \"rxjs\";\nimport {Injectable} from \"@angular/core\";\nimport {AuthService} from \"./auth.service\";\n\n@Injectable()\nexport class AuthTokenInterceptor implements HttpInterceptor {\n\n  constructor(\n    private auth: AuthService\n  ) {\n  }\n\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    if (!this.auth.isAuthenticated()) {\n      return next.handle(req);\n    }\n\n    const request = req.clone({\n      headers: req.headers.set('Authorization', this.getAccessTokenAuthorization())\n    });\n    console.log('HEADERS', request.headers);\n    return next.handle(request);\n  }\n\n  private getAccessTokenAuthorization(): string {\n    const accessToken = this.auth.getAccessToken();\n    return `Bearer ${accessToken}`;\n  }\n\n}\n","import {Injectable} from '@angular/core';\nimport {ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree} from '@angular/router';\nimport {Observable} from 'rxjs';\nimport {AuthService} from \"./auth.service\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  constructor(\n    private auth: AuthService,\n    private router: Router\n  ) {\n  }\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    if (this.auth.isAuthenticated()) {\n      return true;\n    }\n    return this.router.parseUrl(this.auth.loginUrl);\n  }\n\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {AuthService} from \"./auth.service\";\nimport {AuthGuard} from \"./auth.guard\";\nimport {HTTP_INTERCEPTORS} from \"@angular/common/http\";\nimport {AuthClientInterceptor} from \"./auth-client-interceptor\";\nimport {AuthTokenInterceptor} from \"./auth-token-interceptor\";\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n  ],\n  providers: [\n    AuthGuard,\n    AuthService,\n    AuthTokenInterceptor,\n    {provide: HTTP_INTERCEPTORS, useClass: AuthClientInterceptor, multi: true},\n    {provide: HTTP_INTERCEPTORS, useClass: AuthTokenInterceptor, multi: true}]\n})\nexport class AuthModule {\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {environment} from \"../../environments/environment\";\nimport {map, tap} from \"rxjs/operators\";\nimport {JwtHelperService} from \"@auth0/angular-jwt\";\nimport {of} from \"rxjs\";\n\nexport interface Token {\n  access_token: string,\n  token_type: string,\n  refresh_token: string,\n  expires_in: number,\n  scope: string,\n  jti: string\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  private authConfig = environment.auth;\n  private redirectUrl = '/scheduler';\n  public loginUrl = '/login';\n\n  constructor(\n    private httpClient: HttpClient,\n    private helperService: JwtHelperService,\n  ) {\n  }\n\n  login(username: string, password: string) {\n    const {login} = this.authConfig.endpoint;\n    const payload = new FormData();\n    payload.append('username', username);\n    payload.append('password', password);\n    payload.append('grant_type', this.authConfig.grantType);\n    return this.httpClient.post<Token>(login, payload)\n      .pipe(map(token => {\n        this.saveToken(token);\n        const decoed = this.helperService.decodeToken();\n        setTimeout(_ => {\n          this.getValidToken();\n        }, token.expires_in)\n      }));\n  }\n\n  private saveToken({access_token, refresh_token}) {\n    sessionStorage.setItem('access_token', access_token);\n    sessionStorage.setItem('refresh_token', refresh_token);\n  }\n\n  getAccessToken() {\n    return sessionStorage.getItem('access_token');\n  }\n\n  logout() {\n    sessionStorage.clear();\n  }\n\n  isAuthenticated() {\n    console.log('IS AUTHENTICATED',\n      this.helperService.tokenGetter(),\n      this.helperService.isTokenExpired(),\n      this.helperService.decodeToken()\n    );\n    return !!this.helperService.tokenGetter() && !this.helperService.isTokenExpired();\n\n  }\n\n  getClaims() {\n    return this.helperService.decodeToken();\n  }\n\n  redirectAfterLogin() {\n    location.href = this.redirectUrl;\n  }\n\n  getValidToken() {\n    const {login} = this.authConfig.endpoint;\n    if (this.helperService.isTokenExpired()) {\n      return this.httpClient.post<Token>(login, {'grant_type': 'refresh_token'})\n        .pipe(\n          tap(token => this.saveToken(token)),\n          map(({access_token}) => access_token)\n        );\n    }\n    return of(this.getAccessToken());\n  }\n\n  // hasRole(role:string): boolean{\n  //\n  // }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\nconst hostAddress = 'http://localhost:8080';\nexport const environment = {\n  production: false,\n  hostAddress: `${hostAddress}`,\n  auth: {\n    endpoint: {\n      login: `${hostAddress}/oauth/token`,\n      singup: `${hostAddress}/singup`\n    },\n    clientId: 'scheduler-my-awesome-id',\n    clientSecret: 'scheduler-my-super-secret-key',\n    grantType: 'password'\n  }\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\nimport 'zone.js/dist/zone-error'; // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}